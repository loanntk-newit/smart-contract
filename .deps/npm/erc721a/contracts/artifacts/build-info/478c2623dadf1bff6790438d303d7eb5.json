{
	"id": "478c2623dadf1bff6790438d303d7eb5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			".deps/npm/erc721a/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & _BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an initialized ownership slot\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                        // before an unintialized ownership slot\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                        // Hence, `curr` will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed will be zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 toMasked;\n            uint256 end = startTokenId + quantity;\n\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\n            // The assembly, together with the surrounding Solidity code, have been\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\n            assembly {\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n                toMasked := and(to, _BITMASK_ADDRESS)\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    startTokenId // `tokenId`.\n                )\n\n                // The `iszero(eq(,))` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n                // The compiler will optimize the `iszero` away for performance.\n                for {\n                    let tokenId := add(startTokenId, 1)\n                } iszero(eq(tokenId, end)) {\n                    tokenId := add(tokenId, 1)\n                } {\n                    // Emit the `Transfer` event. Similar to above.\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\n                }\n            }\n            if (toMasked == 0) revert MintToZeroAddress();\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n}\n"
			},
			".deps/npm/erc721a/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/erc721a/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_11, callvalue)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  tag_5\n  dup2\n  tag_1\n  jump\t// in\ntag_5:\n  swap3\n  dup4\n  codecopy\n  dup2\n  add\n  swap1\n  0x40\n  dup2\n  dup4\n  sub\n  slt\n  tag_11\n  jumpi\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  dup2\n  gt\n  tag_11\n  jumpi\n  dup4\n  tag_10\n  swap2\n  dup5\n  add\n  tag_2\n  jump\t// in\ntag_10:\n  swap2\n  0x20\n  swap4\n  dup5\n  dup3\n  add\n  mload\n  dup4\n  dup2\n  gt\n  tag_11\n  jumpi\n  tag_13\n  swap3\n  add\n  tag_2\n  jump\t// in\ntag_13:\n  dup3\n  mload\n  swap1\n  dup3\n  dup3\n  gt\n  tag_27\n  jumpi\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":5012:5025  _name = name_ */\n  0x02\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  sload\n  swap2\n  0x01\n  swap5\n  dup6\n  dup5\n  dup2\n  shr\n  swap5\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\ntag_17:\n  dup8\n  dup6\n  lt\n  eq\n  tag_31\n  jumpi\n  dup2\n  swap1\n  0x1f\n  swap5\n  dup6\n  dup2\n  gt\n  tag_20\n  jumpi\ntag_21:\n  pop\n  dup8\n  swap1\n  dup6\n  dup4\n  gt\n  0x01\n  eq\n  tag_22\n  jumpi\n  0x00\n  swap3\n  tag_24\n  jumpi\ntag_25:\n  pop\n  pop\n  not(0x00)\n  0x03\n  dup4\n  swap1\n  shl\n  shr\n  not\n  and\n  swap1\n  dup6\n  shl\n  or\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":5012:5025  _name = name_ */\n  0x02\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  sstore\ntag_26:\n  dup1\n  mload\n  swap3\n  dup4\n  gt\n  tag_27\n  jumpi\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":5035:5052  _symbol = symbol_ */\n  0x03\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  swap5\n  dup6\n  sload\n  dup6\n  dup2\n  dup2\n  shr\n  swap2\n  and\n  dup1\n  iszero\n  tag_29\n  jumpi\ntag_30:\n  dup3\n  dup3\n  lt\n  eq\n  tag_31\n  jumpi\n  dup4\n  dup2\n  gt\n  tag_33\n  jumpi\ntag_34:\n  pop\n  dup1\n  swap3\n  dup5\n  gt\n  0x01\n  eq\n  tag_35\n  jumpi\n  pop\n  swap3\n  dup3\n  swap4\n  swap2\n  dup4\n  swap3\n  0x00\n  swap5\n  tag_37\n  jumpi\ntag_38:\n  pop\n  pop\n  shl\n  swap2\n  not(0x00)\n  swap1\n  dup5\n  shl\n  shr\n  not\n  and\n  or\n  swap1\n  sstore\ntag_39:\n  0x00\n  dup1\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_37:\n  add\n  mload\n  swap3\n  pop\n  codesize\n  dup1\n  jump(tag_38)\ntag_35:\n  swap2\n  swap1\n  dup4\n  not(0x1f)\n  dup2\n  and\n  dup8\n  0x00\n  mstore\n  dup5\n  0x00\n  keccak256\n  swap5\n  0x00\n  swap1\ntag_40:\n  dup9\n  dup4\n  dup4\n  lt\n  tag_41\n  jumpi\n  pop\n  pop\n  pop\n  lt\n  tag_43\n  jumpi\ntag_44:\n  pop\n  pop\n  pop\n  dup2\n  shl\n  add\n  swap1\n  sstore\n  jump(tag_39)\ntag_43:\n  add\n  mload\n  not(0x00)\n  dup4\n  dup7\n  shl\n  0xf8\n  and\n  shr\n  not\n  and\n  swap1\n  sstore\n  codesize\n  dup1\n  dup1\n  jump(tag_44)\ntag_41:\n  dup6\n  dup8\n  add\n  mload\n  dup9\n  sstore\n  swap1\n  swap7\n  add\n  swap6\n  swap5\n  dup6\n  add\n  swap5\n  dup8\n  swap4\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  jump(tag_40)\ntag_33:\n  dup7\n  0x00\n  mstore\n  dup2\n  0x00\n  keccak256\n  dup5\n  dup1\n  dup8\n  add\n  0x05\n  shr\n  dup3\n  add\n  swap3\n  dup5\n  dup9\n  lt\n  tag_45\n  jumpi\ntag_46:\n  add\n  0x05\n  shr\n  add\n  swap1\n  dup7\n  swap1\ntag_47:\n  dup3\n  dup2\n  lt\n  tag_48\n  jumpi\n  pop\n  pop\n  jump(tag_34)\ntag_48:\n  0x00\n  dup2\n  sstore\n  add\n  dup7\n  swap1\n  jump(tag_47)\ntag_45:\n  swap3\n  pop\n  dup2\n  swap3\n  jump(tag_46)\ntag_31:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x22)\n  revert(0x00, 0x24)\ntag_29:\n  swap1\n  0x7f\n  and\n  swap1\n  jump(tag_30)\ntag_27:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_24:\n  add\n  mload\n  swap1\n  pop\n  codesize\n  dup1\n  jump(tag_25)\ntag_22:\n  swap1\n  dup8\n  swap4\n  pop\n  not(0x1f)\n  dup4\n  and\n  swap2\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":5012:5025  _name = name_ */\n  0x02\n  0x00\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  mstore\n  dup10\n  0x00\n  keccak256\n  swap3\n  0x00\ntag_50:\n  dup12\n  dup3\n  dup3\n  lt\n  tag_51\n  jumpi\n  pop\n  pop\n  dup5\n  gt\n  tag_53\n  jumpi\ntag_54:\n  pop\n  pop\n  pop\n  dup2\n  shl\n  add\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":5012:5025  _name = name_ */\n  0x02\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  sstore\n  jump(tag_26)\ntag_53:\n  add\n  mload\n  not(0x00)\n  0xf8\n  dup5\n  0x03\n  shl\n  and\n  shr\n  not\n  and\n  swap1\n  sstore\n  codesize\n  dup1\n  dup1\n  jump(tag_54)\ntag_51:\n  dup4\n  dup6\n  add\n  mload\n  dup7\n  sstore\n  dup12\n  swap8\n  swap1\n  swap6\n  add\n  swap5\n  swap4\n  dup5\n  add\n  swap4\n  add\n  jump(tag_50)\ntag_20:\n  swap1\n  swap2\n  pop\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":5012:5025  _name = name_ */\n  0x02\n  0x00\n    /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  mstore\n  dup8\n  0x00\n  keccak256\n  dup6\n  dup1\n  dup6\n  add\n  0x05\n  shr\n  dup3\n  add\n  swap3\n  dup11\n  dup7\n  lt\n  tag_55\n  jumpi\ntag_56:\n  swap2\n  dup10\n  swap2\n  dup7\n  swap6\n  swap5\n  swap4\n  add\n  0x05\n  shr\n  add\n  swap2\ntag_57:\n  dup3\n  dup2\n  lt\n  tag_58\n  jumpi\n  pop\n  pop\n  jump(tag_21)\ntag_58:\n  0x00\n  dup2\n  sstore\n  dup6\n  swap5\n  pop\n  dup10\n  swap2\n  add\n  jump(tag_57)\ntag_55:\n  swap3\n  pop\n  dup2\n  swap3\n  jump(tag_56)\ntag_16:\n  swap4\n  0x7f\n  and\n  swap4\n  jump(tag_17)\ntag_11:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap2\n  swap1\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_27\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  swap2\n  swap1\n  dup1\n  0x1f\n  dup5\n  add\n  slt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_27\n  jumpi\n  0x20\n  swap1\n  tag_66\n  0x1f\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  tag_1\n  jump\t// in\ntag_66:\n  swap3\n  dup2\n  dup5\n  mstore\n  dup3\n  dup3\n  dup8\n  add\n  add\n  gt\n  tag_11\n  jumpi\n  0x00\ntag_69:\n  dup2\n  dup2\n  lt\n  tag_70\n  jumpi\n  pop\n  dup3\n  0x00\n  swap4\n  swap5\n  swap6\n  pop\n  add\n  add\n  mstore\n  swap1\n  jump\t// out\ntag_70:\n  dup6\n  dup2\n  add\n  dup4\n  add\n  mload\n  dup5\n  dup3\n  add\n  dup5\n  add\n  mstore\n  dup3\n  add\n  jump(tag_69)\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_47, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_47:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_61\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_63\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_65\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_67\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_69\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_71\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_73\n      jumpi\n      0xe985e9c5\n      eq\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      tag_26\n      jump\t// in\n    tag_73:\n      tag_25\n      jump\t// in\n    tag_71:\n      tag_24\n      jump\t// in\n    tag_69:\n      tag_19\n      jump\t// in\n    tag_67:\n      tag_18\n      jump\t// in\n    tag_65:\n      tag_17\n      jump\t// in\n    tag_63:\n      tag_16\n      jump\t// in\n    tag_61:\n      tag_15\n      jump\t// in\n    tag_59:\n      tag_14\n      jump\t// in\n    tag_57:\n      tag_12\n      jump\t// in\n    tag_55:\n      tag_11\n      jump\t// in\n    tag_53:\n      tag_8\n      jump\t// in\n    tag_51:\n      tag_7\n      jump\t// in\n    tag_49:\n      tag_3\n      jump\t// in\n    tag_1:\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup2\n      and\n      sub\n      tag_77\n      jumpi\n      jump\t// out\n    tag_77:\n      0x00\n      dup1\n      revert\n    tag_3:\n      jumpi(tag_77, callvalue)\n      jumpi(tag_77, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      calldataload(0x04)\n      tag_83\n      dup2\n      tag_1\n      jump\t// in\n    tag_83:\n      shl(0xe0, 0xffffffff)\n      and\n      shl(0xe0, 0x01ffc9a7)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":9558:9583  interfaceId == 0x01ffc9a7 */\n      dup2\n      eq\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":9558:9659  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      swap1\n      dup2\n      iszero\n      tag_84\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n    tag_85:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":9558:9735  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup2\n      iszero\n      tag_86\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n    tag_87:\n      pop\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":9558:9735  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_86:\n      shl(0xe0, 0x5b5e139f)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":9710:9735  interfaceId == 0x5b5e139f */\n      eq\n      swap1\n      pop\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":9558:9735  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      codesize\n      jump(tag_87)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":9558:9659  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_84:\n      shl(0xe0, 0x80ac58cd)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":9634:9659  interfaceId == 0x80ac58cd */\n      dup2\n      eq\n      swap2\n      pop\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":9558:9659  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      jump(tag_85)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n    tag_5:\n      swap2\n      swap1\n      dup3\n      mload\n      swap3\n      dup4\n      dup3\n      mstore\n      0x00\n    tag_88:\n      dup5\n      dup2\n      lt\n      tag_89\n      jumpi\n      pop\n      pop\n      dup3\n      0x00\n      0x20\n      dup1\n      swap5\n      swap6\n      dup5\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_89:\n      0x20\n      dup2\n      dup4\n      add\n      dup2\n      add\n      mload\n      dup5\n      dup4\n      add\n      dup3\n      add\n      mstore\n      add\n      jump(tag_88)\n    tag_6:\n      swap1\n      0x20\n      tag_91\n      swap3\n      dup2\n      dup2\n      mstore\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_91:\n      swap1\n      jump\t// out\n    tag_7:\n      jumpi(tag_77, callvalue)\n      0x00\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      mload(0x40)\n      swap1\n      dup1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":10125:10130  _name */\n      0x02\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      sload\n      swap1\n      0x01\n      swap2\n      dup1\n      dup4\n      shr\n      swap3\n      dup1\n      dup3\n      and\n      swap3\n      dup4\n      iszero\n      tag_96\n      jumpi\n    tag_97:\n      0x20\n      swap3\n      dup4\n      dup7\n      lt\n      dup6\n      eq\n      tag_98\n      jumpi\n      dup6\n      dup9\n      mstore\n      0x20\n      dup9\n      add\n      swap5\n      swap1\n      dup2\n      iszero\n      tag_101\n      jumpi\n      pop\n      0x01\n      eq\n      tag_103\n      jumpi\n    tag_104:\n      tag_105\n      dup8\n      tag_106\n      dup2\n      dup10\n      sub\n      dup3\n      tag_22\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_6\n      jump\t// in\n    tag_105:\n      sub\n      swap1\n      return\n    tag_103:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":10125:10130  _name */\n      0x02\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x00\n      mstore\n      swap5\n      pop\n      swap2\n      swap3\n      swap2\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n    tag_107:\n      dup4\n      dup7\n      lt\n      tag_109\n      jumpi\n      pop\n      pop\n      pop\n      swap2\n      add\n      swap1\n      pop\n      tag_106\n      dup3\n      tag_105\n      codesize\n      dup1\n      jump(tag_104)\n    tag_109:\n      dup1\n      sload\n      dup6\n      dup8\n      add\n      mstore\n      swap5\n      dup3\n      add\n      swap5\n      dup2\n      add\n      jump(tag_107)\n    tag_101:\n      not(0xff)\n      and\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      swap1\n      iszero\n      iszero\n      0x05\n      shl\n      add\n      swap1\n      pop\n      tag_106\n      dup3\n      tag_105\n      codesize\n      dup1\n      jump(tag_104)\n    tag_98:\n      shl(0xe0, 0x4e487b71)\n      dup3\n      mstore\n      mstore(0x04, 0x22)\n      0x24\n      dup3\n      revert\n    tag_96:\n      swap4\n      0x7f\n      and\n      swap4\n      jump(tag_97)\n    tag_94:\n      dup1\n      revert\n    tag_8:\n      jumpi(tag_77, callvalue)\n      jumpi(tag_77, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16460:16476  _exists(tokenId) */\n      tag_115\n      dup2\n      tag_37\n      jump\t// in\n    tag_115:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16459:16476  !_exists(tokenId) */\n      iszero\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16455:16519  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_116\n      jumpi\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16537:16552  _tokenApprovals */\n      0x06\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      mstore\n      0x20\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16455:16519  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_116:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16485:16519  ApprovalQueryForNonexistentToken() */\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x04\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16485:16519  ApprovalQueryForNonexistentToken() */\n      revert\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n    tag_9:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_77\n      jumpi\n      jump\t// out\n    tag_10:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_77\n      jumpi\n      jump\t// out\n    tag_11:\n      jumpi(tag_77, slt(add(not(0x03), calldatasize), 0x40))\n      tag_124\n      tag_9\n      jump\t// in\n    tag_124:\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      tag_125\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup4\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      tag_34\n      jump\t// in\n    tag_125:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      swap1\n      dup2\n      caller\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":15947:15975  _msgSenderERC721A() != owner */\n      sub\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":15943:16115  if (_msgSenderERC721A() != owner)... */\n      tag_126\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n    tag_127:\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16125:16140  _tokenApprovals */\n      0x06\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      or\n      swap1\n      sstore\n      swap4\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16175:16203  Approval(owner, to, tokenId) */\n      swap1\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      dup5\n      dup1\n      log4\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup1\n      return\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":15943:16115  if (_msgSenderERC721A() != owner)... */\n    tag_126:\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup3\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17402:17420  _operatorApprovals */\n      0x07\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":15943:16115  if (_msgSenderERC721A() != owner)... */\n      tag_127\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":15989:16115  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16065:16100  ApprovalCallerNotOwnerNorApproved() */\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x04\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16065:16100  ApprovalCallerNotOwnerNorApproved() */\n      revert\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n    tag_12:\n      jumpi(tag_77, callvalue)\n      jumpi(tag_77, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      sload(0x00)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":6164:6176  _burnCounter */\n      0x01\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      sload\n      swap1\n      sub\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_13:\n      0x60\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_77\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      calldataload(0x04)\n      dup3\n      dup2\n      and\n      dup2\n      sub\n      tag_77\n      jumpi\n      swap2\n      calldataload(0x24)\n      swap1\n      dup2\n      and\n      dup2\n      sub\n      tag_77\n      jumpi\n      swap1\n      calldataload(0x44)\n      swap1\n      jump\t// out\n    tag_14:\n      tag_142\n      tag_143\n      calldatasize\n      tag_13\n      jump\t// in\n    tag_143:\n      swap2\n      tag_39\n      jump\t// in\n    tag_142:\n      stop\n    tag_15:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      tag_142\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      tag_145\n      calldatasize\n      tag_13\n      jump\t// in\n    tag_145:\n      swap1\n      mload(0x40)\n      swap3\n      tag_146\n      dup5\n      tag_21\n      jump\t// in\n    tag_146:\n      0x00\n      dup5\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      tag_42\n      jump\t// in\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n    tag_16:\n      jumpi(tag_77, callvalue)\n      jumpi(tag_77, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      tag_151\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      calldataload(0x04)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      tag_34\n      jump\t// in\n    tag_151:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_17:\n      jumpi(tag_77, callvalue)\n      jumpi(tag_77, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_156\n      tag_9\n      jump\t// in\n    tag_156:\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":7140:7159  owner == address(0) */\n      dup1\n      iszero\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":7136:7196  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_157\n      jumpi\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":7213:7231  _packedAddressData */\n      0x05\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      mstore\n      0x20\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":1360:1373  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      sload(keccak256(0x00, 0x40))\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":7213:7268  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":7136:7196  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_157:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":7168:7196  BalanceQueryForZeroAddress() */\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x04\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":7168:7196  BalanceQueryForZeroAddress() */\n      revert\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n    tag_18:\n      jumpi(tag_77, callvalue)\n      0x00\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      mload(0x40)\n      swap1\n      dup1\n      sload(0x03)\n      swap1\n      0x01\n      swap2\n      dup1\n      dup4\n      shr\n      swap3\n      dup1\n      dup3\n      and\n      swap3\n      dup4\n      iszero\n      tag_163\n      jumpi\n    tag_164:\n      0x20\n      swap3\n      dup4\n      dup7\n      lt\n      dup6\n      eq\n      tag_98\n      jumpi\n      dup6\n      dup9\n      mstore\n      0x20\n      dup9\n      add\n      swap5\n      swap1\n      dup2\n      iszero\n      tag_101\n      jumpi\n      pop\n      0x01\n      eq\n      tag_170\n      jumpi\n      tag_105\n      dup8\n      tag_106\n      dup2\n      dup10\n      sub\n      dup3\n      tag_22\n      jump\t// in\n    tag_170:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":10296:10303  _symbol */\n      0x03\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x00\n      mstore\n      swap5\n      pop\n      swap2\n      swap3\n      swap2\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n    tag_174:\n      dup4\n      dup7\n      lt\n      tag_176\n      jumpi\n      pop\n      pop\n      pop\n      swap2\n      add\n      swap1\n      pop\n      tag_106\n      dup3\n      tag_105\n      codesize\n      dup1\n      jump(tag_104)\n    tag_176:\n      dup1\n      sload\n      dup6\n      dup8\n      add\n      mstore\n      swap5\n      dup3\n      add\n      swap5\n      dup2\n      add\n      jump(tag_174)\n    tag_163:\n      swap4\n      0x7f\n      and\n      swap4\n      jump(tag_164)\n    tag_19:\n      jumpi(tag_77, callvalue)\n      jumpi(tag_77, slt(add(not(0x03), calldatasize), 0x40))\n      tag_182\n      tag_9\n      jump\t// in\n    tag_182:\n      calldataload(0x24)\n      swap1\n      dup2\n      iszero\n      iszero\n      dup1\n      swap3\n      sub\n      tag_77\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      swap1\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":16995:17013  _operatorApprovals */\n      0x07\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      not(0xff)\n      dup2\n      sload\n      and\n      0xff\n      dup5\n      and\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap3\n      log3\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      stop\n    tag_20:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_21:\n      0x20\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_186\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_186:\n      tag_20\n      jump\t// in\n    tag_22:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_186\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_23:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_186\n      jumpi\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_24:\n      jumpi(tag_77, slt(add(not(0x03), calldatasize), 0x80))\n      tag_194\n      tag_9\n      jump\t// in\n    tag_194:\n      tag_195\n      tag_10\n      jump\t// in\n    tag_195:\n      calldataload(0x64)\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      tag_77\n      jumpi\n      calldatasize\n      0x23\n      dup5\n      add\n      slt\n      iszero\n      tag_77\n      jumpi\n      dup3\n      0x04\n      add\n      calldataload\n      swap2\n      tag_200\n      dup4\n      tag_23\n      jump\t// in\n    tag_200:\n      swap3\n      tag_201\n      mload(0x40)\n      swap5\n      dup6\n      tag_22\n      jump\t// in\n    tag_201:\n      dup1\n      dup5\n      mstore\n      calldatasize\n      0x24\n      dup3\n      dup8\n      add\n      add\n      gt\n      tag_77\n      jumpi\n      0x20\n      dup2\n      0x00\n      swap3\n      0x24\n      tag_142\n      swap9\n      add\n      dup4\n      dup9\n      add\n      calldatacopy\n      dup6\n      add\n      add\n      mstore\n      calldataload(0x44)\n      swap2\n      tag_42\n      jump\t// in\n    tag_25:\n      jumpi(tag_77, callvalue)\n      jumpi(tag_77, slt(add(not(0x03), calldatasize), 0x20))\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":10514:10530  _exists(tokenId) */\n      tag_209\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      calldataload(0x04)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":10514:10530  _exists(tokenId) */\n      tag_37\n      jump\t// in\n    tag_209:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":10513:10530  !_exists(tokenId) */\n      iszero\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":10509:10568  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_210\n      jumpi\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      tag_212\n      dup2\n      tag_21\n      jump\t// in\n    tag_212:\n      mstore\n      tag_105\n      mload(0x40)\n      tag_214\n      dup2\n      tag_21\n      jump\t// in\n    tag_214:\n      0x00\n      dup2\n      mstore\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap1\n      tag_5\n      jump\t// in\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":10509:10568  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_210:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":10539:10568  URIQueryForNonexistentToken() */\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x04\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":10539:10568  URIQueryForNonexistentToken() */\n      revert\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n    tag_26:\n      jumpi(tag_77, callvalue)\n      jumpi(tag_77, slt(add(not(0x03), calldatasize), 0x40))\n      0x20\n      0xff\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17402:17437  _operatorApprovals[owner][operator] */\n      tag_219\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      tag_220\n      tag_9\n      jump\t// in\n    tag_220:\n      tag_221\n      tag_10\n      jump\t// in\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17402:17420  _operatorApprovals */\n      0x07\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup7\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      swap3\n      swap1\n      swap4\n      and\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      swap1\n      jump\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17402:17437  _operatorApprovals[owner][operator] */\n    tag_219:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12515:13764  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_34:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12601:12623  uint256 curr = tokenId */\n      dup2\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup2\n      sload\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12707:12727  curr < _currentIndex */\n      dup2\n      lt\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12703:13700  if (curr < _currentIndex) {... */\n      tag_222\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12515:13764  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_223:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":13726:13757  OwnerQueryForNonexistentToken() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12703:13700  if (curr < _currentIndex) {... */\n    tag_222:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12768:12785  _packedOwnerships */\n      0x04\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      swap1\n      0x20\n      swap2\n      dup1\n      dup4\n      mstore\n      0x40\n      swap3\n      dup4\n      dup4\n      keccak256\n      sload\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      swap5\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x01\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0xe0\n      shl\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12855:12879  packed & _BITMASK_BURNED */\n      dup7\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12855:12884  packed & _BITMASK_BURNED == 0 */\n      iszero\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12851:13682  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_224\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12703:13700  if (curr < _currentIndex) {... */\n      pop\n      pop\n      pop\n      jump(tag_223)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":12851:13682  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_224:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":13510:13621  while (packed == 0) {... */\n      swap4\n      swap3\n      swap2\n      swap1\n      swap4\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":13517:13528  packed == 0 */\n    tag_226:\n      dup6\n      iszero\n      tag_227\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":13646:13659  return packed */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":13510:13621  while (packed == 0) {... */\n    tag_227:\n      not(0x00)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      add\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup1\n      dup4\n      mstore\n      dup2\n      dup6\n      mstore\n      dup4\n      dup4\n      keccak256\n      sload\n      swap6\n      pop\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":13510:13621  while (packed == 0) {... */\n      jump(tag_226)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17693:17970  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_37:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":5508:5509  0 */\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      sload\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17835:17858  tokenId < _currentIndex */\n      dup2\n      lt\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17793:17944  _startTokenId() <= tokenId &&... */\n      swap1\n      dup2\n      tag_229\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17774:17944  return... */\n      pop\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17693:17970  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17793:17944  _startTokenId() <= tokenId &&... */\n    tag_229:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      swap1\n      pop\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":5508:5509  0 */\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17895:17912  _packedOwnerships */\n      0x04\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      mstore\n      0x01\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0xe0\n      shl\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x40\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":5508:5509  0 */\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      keccak256\n      sload\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17895:17939  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17895:17944  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17693:17970  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_39:\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20070:20097  _packedOwnershipOf(tokenId) */\n      tag_231\n      dup4\n      tag_34\n      jump\t// in\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup4\n      dup2\n      and\n      swap3\n      dup3\n      dup3\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20112:20157  address(uint160(prevOwnershipPacked)) != from */\n      dup5\n      swap1\n      sub\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20108:20194  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_232\n      jumpi\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup7\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":19036:19051  _tokenApprovals */\n      0x06\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":19164:19296  assembly {... */\n      dup1\n      sload\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      swap1\n      swap3\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20393:20462  !_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_235\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":18242:18714  assembly {... */\n      dup9\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":18242:18714  assembly {... */\n      swap1\n      dup2\n      eq\n      swap1\n      dup5\n      eq\n      or\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20393:20462  !_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      iszero\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      jump\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20394:20462  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n    tag_236:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20393:20462  !_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      iszero\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      jump\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20393:20462  !_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n    tag_235:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20389:20568  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_237\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_238:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup3\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20583:20599  to == address(0) */\n      swap6\n      dup7\n      iszero\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20579:20631  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_239\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21368:21390  _packedAddressData[to] */\n      tag_241\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20748:20938  assembly {... */\n      swap4\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21300:21324  _packedAddressData[from] */\n      tag_242\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20748:20938  assembly {... */\n      swap3\n      tag_243\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_244:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21300:21318  _packedAddressData */\n      0x05\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      swap1\n      jump\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21300:21324  _packedAddressData[from] */\n    tag_242:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup1\n      sload\n      not(0x00)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      add\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21300:21318  _packedAddressData */\n      0x05\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      swap1\n      jump\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21368:21390  _packedAddressData[to] */\n    tag_241:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n      0x01\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      0xe1\n      shl\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":14403:14734  assembly {... */\n      dup1\n      shl(0xa0, timestamp)\n      dup6\n      or\n      or\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21654:21680  _packedOwnerships[tokenId] */\n      tag_247\n      dup7\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x00\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21654:21671  _packedOwnerships */\n      0x04\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21654:21680  _packedOwnerships[tokenId] */\n    tag_247:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      sstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21943:21990  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup2\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21943:21995  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      iszero\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21939:22556  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_248\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_249:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22581:22608  Transfer(from, to, tokenId) */\n      pop\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      0x00\n      dup1\n      log4\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":19903:22667  function transferFrom(... */\n      jump\t// out\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21939:22556  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_248:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x01\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      dup5\n      add\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22168:22198  _packedOwnerships[nextTokenId] */\n      tag_250\n      dup2\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x00\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21654:21671  _packedOwnerships */\n      0x04\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22168:22198  _packedOwnerships[nextTokenId] */\n    tag_250:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      sload\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22168:22203  _packedOwnerships[nextTokenId] == 0 */\n      iszero\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22164:22542  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_251\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21939:22556  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_252:\n      pop\n      jump(tag_249)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22164:22542  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_251:\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      sload\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22285:22524  if (nextTokenId != _currentIndex) {... */\n      dup2\n      eq\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22164:22542  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_252\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22285:22524  if (nextTokenId != _currentIndex) {... */\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22449:22479  _packedOwnerships[nextTokenId] */\n      tag_255\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x00\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":21654:21671  _packedOwnerships */\n      0x04\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22449:22479  _packedOwnerships[nextTokenId] */\n    tag_255:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      sstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22285:22524  if (nextTokenId != _currentIndex) {... */\n      codesize\n      dup1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":22164:22542  if (_packedOwnerships[nextTokenId] == 0) {... */\n      jump(tag_252)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20748:20938  assembly {... */\n    tag_243:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20597:20598  0 */\n      0x00\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20748:20938  assembly {... */\n      swap1\n      sstore\n      codesize\n      jump(tag_244)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20579:20631  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_239:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20608:20631  TransferToZeroAddress() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20389:20568  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_237:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20480:20524  !isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_256\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17402:17437  _operatorApprovals[owner][operator] */\n      tag_236\n      tag_258\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n      tag_259\n      dup12\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17402:17420  _operatorApprovals */\n      0x07\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n    tag_259:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":17402:17437  _operatorApprovals[owner][operator] */\n    tag_258:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      sload\n      0xff\n      and\n      swap1\n      jump\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20480:20524  !isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_256:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20476:20568  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      iszero\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20389:20568  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_238\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20476:20568  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20533:20568  TransferCallerNotOwnerNorApproved() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20108:20194  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_232:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":20166:20194  TransferFromIncorrectOwner() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n    tag_42:\n      swap3\n      swap2\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23718:23725  tokenId */\n      tag_262\n      dup3\n      dup3\n      dup7\n      tag_39\n      jump\t// in\n    tag_262:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23740:23754  to.code.length */\n      dup1\n      extcodesize\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23736:23916  if (to.code.length != 0)... */\n      tag_263\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n    tag_264:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23736:23916  if (to.code.length != 0)... */\n    tag_263:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23778:23834  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_265\n      swap4\n      tag_46\n      jump\t// in\n    tag_265:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23777:23834  !_checkContractOnERC721Received(from, to, tokenId, _data) */\n      iszero\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23773:23916  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_266\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23736:23916  if (to.code.length != 0)... */\n      codesize\n      dup1\n      dup1\n      dup1\n      jump(tag_264)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23773:23916  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_266:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":23861:23901  TransferToNonERC721ReceiverImplementer() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n    tag_43:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_77\n      jumpi\n      mload\n      tag_91\n      dup2\n      tag_1\n      jump\t// in\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      dup2\n      mstore\n      swap2\n      and\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x80\n      0x60\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      tag_91\n      swap3\n      swap2\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_45:\n      jumpi(tag_272, iszero(returndatasize))\n      returndatasize\n      swap1\n      tag_274\n      dup3\n      tag_23\n      jump\t// in\n    tag_274:\n      swap2\n      tag_275\n      mload(0x40)\n      swap4\n      dup5\n      tag_22\n      jump\t// in\n    tag_275:\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump\t// out\n    tag_272:\n      0x60\n      swap1\n      jump\t// out\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n    tag_46:\n      swap3\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x20\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n      swap2\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_277\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n      swap4\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x00\n      mload(0x40)\n      dup1\n      swap7\n      dup2\n      swap6\n      dup3\n      swap5\n      shl(0xe1, 0x0a85bd01)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      swap11\n      dup12\n      dup6\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      dup7\n      add\n      tag_44\n      jump\t// in\n    tag_277:\n      sub\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      gas\n      call\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      0x00\n      swap2\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      dup2\n      tag_278\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n    tag_279:\n      pop\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26122:26639  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_280\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26358:26639  catch (bytes memory reason) {... */\n      tag_282\n      tag_45\n      jump\t// in\n    tag_282:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      dup1\n      mload\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26404:26422  reason.length == 0 */\n      dup2\n      tag_283\n      jumpi\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26449:26489  TransferToNonERC721ReceiverImplementer() */\n      dup2\n      mstore\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26449:26489  TransferToNonERC721ReceiverImplementer() */\n      revert\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26400:26629  if (reason.length == 0) {... */\n    tag_283:\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x20\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26528:26615  assembly {... */\n      add\n      revert\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26122:26639  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_280:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      and\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26282:26346  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      eq\n      swap1\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26275:26346  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      jump\t// out\n        /* \".deps/npm/erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n    tag_278:\n      tag_285\n      swap2\n      swap3\n      pop\n      0x20\n      returndatasize\n      dup2\n      gt\n      tag_286\n      jumpi\n    tag_287:\n      tag_288\n      dup2\n      dup4\n      tag_22\n      jump\t// in\n    tag_288:\n      dup2\n      add\n      swap1\n      tag_43\n      jump\t// in\n    tag_285:\n      swap1\n      codesize\n      jump(tag_279)\n    tag_286:\n      pop\n      returndatasize\n      jump(tag_287)\n\n    auxdata: 0xa26469706673582212204d5a9af43cd845795190a07f841648fbed40d3201a10a1a4a4c029614fe9803464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_string_fromMemory": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052346200030f5762000ff1803803806200001d8162000314565b9283398101906040818303126200030f5780516001600160401b03908181116200030f57836200004f9184016200033a565b91602093848201518381116200030f576200006b92016200033a565b8251908282116200022157600254916001948584811c9416801562000304575b8785101462000200578190601f94858111620002ad575b508790858311600114620002435760009262000237575b5050600019600383901b1c191690851b176002555b8051928311620002215760039485548581811c9116801562000216575b828210146200020057838111620001b5575b50809284116001146200014b57509282939183926000946200013f575b50501b9160001990841b1c19161790555b60008055604051610c449081620003ad8239f35b0151925038806200011a565b919083601f1981168760005284600020946000905b888383106200019a575050501062000181575b505050811b0190556200012b565b015160001983861b60f8161c1916905538808062000173565b85870151885590960195948501948793509081019062000160565b86600052816000208480870160051c820192848810620001f6575b0160051c019086905b828110620001e9575050620000fd565b60008155018690620001d9565b92508192620001d0565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000eb565b634e487b7160e01b600052604160045260246000fd5b015190503880620000b9565b90879350601f198316916002600052896000209260005b8b8282106200029657505084116200027c575b505050811b01600255620000ce565b015160001960f88460031b161c191690553880806200026d565b8385015186558b979095019493840193016200025a565b9091506002600052876000208580850160051c8201928a8610620002fa575b918991869594930160051c01915b828110620002ea575050620000a2565b60008155859450899101620002da565b92508192620002cc565b93607f16936200008b565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200022157604052565b919080601f840112156200030f5782516001600160401b038111620002215760209062000370601f8201601f1916830162000314565b928184528282870101116200030f5760005b8181106200039857508260009394955001015290565b85810183015184820184015282016200038256fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f757806306fdde03146100f2578063081812fc146100ed578063095ea7b3146100e857806318160ddd146100e357806323b872dd146100de57806342842e0e146100d95780636352211e146100d457806370a08231146100cf57806395d89b41146100ca578063a22cb465146100c5578063b88d4fde146100c0578063c87b56dd146100bb5763e985e9c5146100b657600080fd5b6107e5565b61077c565b6106f8565b6105f5565b610532565b6104d6565b6104a7565b610484565b610470565b610418565b610361565b6102e1565b6101d5565b610113565b6001600160e01b031981160361010e57565b600080fd5b3461010e57602036600319011261010e576020600435610132816100fc565b63ffffffff60e01b166301ffc9a760e01b8114908115610170575b811561015f575b506040519015158152f35b635b5e139f60e01b14905038610154565b6380ac58cd60e01b8114915061014d565b919082519283825260005b8481106101ad575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161018c565b9060206101d2928181520190610181565b90565b3461010e576000806003193601126102de5760405190806002549060019180831c928082169283156102d4575b60209283861085146102c057858852602088019490811561029f5750600114610246575b61024287610236818903826106ba565b604051918291826101c1565b0390f35b600260005294509192917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b83861061028e5750505091019050610236826102423880610226565b805485870152948201948101610272565b60ff191685525050505090151560051b019050610236826102423880610226565b634e487b7160e01b82526022600452602482fd5b93607f1693610202565b80fd5b3461010e57602036600319011261010e576004356102fe816108b0565b15610323576000526006602052602060018060a01b0360406000205416604051908152f35b6040516333d1c03960e21b8152600490fd5b600435906001600160a01b038216820361010e57565b602435906001600160a01b038216820361010e57565b604036600319011261010e57610375610335565b6024356001600160a01b038061038a83610842565b16908133036103e5575b600083815260066020526040812080546001600160a01b0319166001600160a01b0387161790559316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b600082815260076020908152604080832033845290915290205460ff16610394576040516367d9dca160e11b8152600490fd5b3461010e57600036600319011261010e5760206000546001549003604051908152f35b606090600319011261010e576001600160a01b0390600435828116810361010e5791602435908116810361010e579060443590565b61048261047c3661043b565b916108d9565b005b6104826104903661043b565b906040519261049e84610699565b60008452610aab565b3461010e57602036600319011261010e5760206001600160a01b036104cd600435610842565b16604051908152f35b3461010e57602036600319011261010e576001600160a01b036104f7610335565b168015610520576000526005602052602067ffffffffffffffff60406000205416604051908152f35b6040516323d3ad8160e21b8152600490fd5b3461010e576000806003193601126102de5760405190806003549060019180831c928082169283156105eb575b60209283861085146102c057858852602088019490811561029f57506001146105925761024287610236818903826106ba565b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8386106105da5750505091019050610236826102423880610226565b8054858701529482019481016105be565b93607f169361055f565b3461010e57604036600319011261010e5761060e610335565b6024359081151580920361010e573360009081526007602090815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106b557604052565b610683565b90601f8019910116810190811067ffffffffffffffff8211176106b557604052565b67ffffffffffffffff81116106b557601f01601f191660200190565b608036600319011261010e5761070c610335565b61071461034b565b6064359167ffffffffffffffff831161010e573660238401121561010e57826004013591610741836106dc565b9261074f60405194856106ba565b808452366024828701011161010e5760208160009260246104829801838801378501015260443591610aab565b3461010e57602036600319011261010e576107986004356108b0565b156107d35760006040516107ab81610699565b526102426040516107bb81610699565b60008152604051918291602083526020830190610181565b604051630a14c4b560e41b8152600490fd5b3461010e57604036600319011261010e57602060ff610836610805610335565b61080d61034b565b6001600160a01b0391821660009081526007865260408082209290931681526020919091522090565b54166040519015158152f35b60008181548110610860575b604051636f96cda160e11b8152600490fd5b81526004906020918083526040928383205494600160e01b8616156108875750505061084e565b93929190935b851561089b57505050505090565b6000190180835281855283832054955061088d565b600054811090816108bf575090565b90506000526004602052600160e01b604060002054161590565b906108e383610842565b6001600160a01b0383811692828216849003610a9a576000868152600660205260409020805490926109286001600160a01b03881633908114908414171590565b1590565b610a3f575b8216958615610a2d576109809361095e92610a23575b506001600160a01b0316600090815260056020526040902090565b80546000190190556001600160a01b0316600090815260056020526040902090565b80546001019055600160e11b804260a01b8517176109a8866000526004602052604060002090565b558116156109d9575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b600184016109f1816000526004602052604060002090565b54156109fe575b506109b1565b60005481146109f857610a1b906000526004602052604060002090565b5538806109f8565b6000905538610943565b604051633a954ecd60e21b8152600490fd5b610a83610924610a7c33610a658b60018060a01b03166000526007602052604060002090565b9060018060a01b0316600052602052604060002090565b5460ff1690565b1561092d57604051632ce44b5f60e11b8152600490fd5b60405162a1148160e81b8152600490fd5b929190610ab98282866108d9565b803b610ac6575b50505050565b610acf93610b65565b15610add5738808080610ac0565b6040516368d2bf6b60e11b8152600490fd5b9081602091031261010e57516101d2816100fc565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526101d292910190610181565b3d15610b60573d90610b46826106dc565b91610b5460405193846106ba565b82523d6000602084013e565b606090565b92602091610b8e936000604051809681958294630a85bd0160e11b9a8b85523360048601610b04565b03926001600160a01b03165af160009181610bde575b50610bd057610bb1610b35565b80519081610bcb576040516368d2bf6b60e11b8152600490fd5b602001fd5b6001600160e01b0319161490565b610c0091925060203d8111610c07575b610bf881836106ba565b810190610aef565b9038610ba4565b503d610bee56fea26469706673582212204d5a9af43cd845795190a07f841648fbed40d3201a10a1a4a4c029614fe9803464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x30F JUMPI PUSH3 0xFF1 DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x314 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH3 0x30F JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x30F JUMPI DUP4 PUSH3 0x4F SWAP2 DUP5 ADD PUSH3 0x33A JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP4 DUP5 DUP3 ADD MLOAD DUP4 DUP2 GT PUSH3 0x30F JUMPI PUSH3 0x6B SWAP3 ADD PUSH3 0x33A JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP3 DUP3 GT PUSH3 0x221 JUMPI PUSH1 0x2 SLOAD SWAP2 PUSH1 0x1 SWAP5 DUP6 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x304 JUMPI JUMPDEST DUP8 DUP6 LT EQ PUSH3 0x200 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x2AD JUMPI JUMPDEST POP DUP8 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x243 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x237 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP6 SHL OR PUSH1 0x2 SSTORE JUMPDEST DUP1 MLOAD SWAP3 DUP4 GT PUSH3 0x221 JUMPI PUSH1 0x3 SWAP5 DUP6 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x216 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x200 JUMPI DUP4 DUP2 GT PUSH3 0x1B5 JUMPI JUMPDEST POP DUP1 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH3 0x14B JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x13F JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP5 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0xC44 SWAP1 DUP2 PUSH3 0x3AD DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x11A JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x19A JUMPI POP POP POP LT PUSH3 0x181 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x12B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP7 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x173 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x160 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP9 LT PUSH3 0x1F6 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1E9 JUMPI POP POP PUSH3 0xFD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x1D9 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xEB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xB9 JUMP JUMPDEST SWAP1 DUP8 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x2 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP12 DUP3 DUP3 LT PUSH3 0x296 JUMPI POP POP DUP5 GT PUSH3 0x27C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0xCE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x26D JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP12 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x25A JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH3 0x2FA JUMPI JUMPDEST SWAP2 DUP10 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2EA JUMPI POP POP PUSH3 0xA2 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH3 0x2DA JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2CC JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0x8B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x221 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x30F JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x221 JUMPI PUSH1 0x20 SWAP1 PUSH3 0x370 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x314 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x30F JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x398 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x382 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xBB JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x132 DUP2 PUSH2 0xFC JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x170 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x15F JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x154 JUMP JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x14D JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1AD JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x18C JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x1D2 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x2D4 JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x2C0 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x29F JUMPI POP PUSH1 0x1 EQ PUSH2 0x246 JUMPI JUMPDEST PUSH2 0x242 DUP8 PUSH2 0x236 DUP2 DUP10 SUB DUP3 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP4 DUP7 LT PUSH2 0x28E JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x236 DUP3 PUSH2 0x242 CODESIZE DUP1 PUSH2 0x226 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x272 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 MSTORE POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x236 DUP3 PUSH2 0x242 CODESIZE DUP1 PUSH2 0x226 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x202 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2FE DUP2 PUSH2 0x8B0 JUMP JUMPDEST ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x375 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x38A DUP4 PUSH2 0x842 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x3E5 JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x394 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x10E JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x10E JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x482 PUSH2 0x47C CALLDATASIZE PUSH2 0x43B JUMP JUMPDEST SWAP2 PUSH2 0x8D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x482 PUSH2 0x490 CALLDATASIZE PUSH2 0x43B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x49E DUP5 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xAAB JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4CD PUSH1 0x4 CALLDATALOAD PUSH2 0x842 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4F7 PUSH2 0x335 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x5EB JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x2C0 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x29F JUMPI POP PUSH1 0x1 EQ PUSH2 0x592 JUMPI PUSH2 0x242 DUP8 PUSH2 0x236 DUP2 DUP10 SUB DUP3 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP7 LT PUSH2 0x5DA JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x236 DUP3 PUSH2 0x242 CODESIZE DUP1 PUSH2 0x226 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x5BE JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x55F JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x60E PUSH2 0x335 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x10E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6B5 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x70C PUSH2 0x335 JUMP JUMPDEST PUSH2 0x714 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x10E JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x10E JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x741 DUP4 PUSH2 0x6DC JUMP JUMPDEST SWAP3 PUSH2 0x74F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x6BA JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0x10E JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x482 SWAP9 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xAAB JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x798 PUSH1 0x4 CALLDATALOAD PUSH2 0x8B0 JUMP JUMPDEST ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x7AB DUP2 PUSH2 0x699 JUMP JUMPDEST MSTORE PUSH2 0x242 PUSH1 0x40 MLOAD PUSH2 0x7BB DUP2 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x836 PUSH2 0x805 PUSH2 0x335 JUMP JUMPDEST PUSH2 0x80D PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x860 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP4 KECCAK256 SLOAD SWAP5 PUSH1 0x1 PUSH1 0xE0 SHL DUP7 AND ISZERO PUSH2 0x887 JUMPI POP POP POP PUSH2 0x84E JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 JUMPDEST DUP6 ISZERO PUSH2 0x89B JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD DUP1 DUP4 MSTORE DUP2 DUP6 MSTORE DUP4 DUP4 KECCAK256 SLOAD SWAP6 POP PUSH2 0x88D JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT SWAP1 DUP2 PUSH2 0x8BF JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x8E3 DUP4 PUSH2 0x842 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 DUP3 DUP3 AND DUP5 SWAP1 SUB PUSH2 0xA9A JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 PUSH2 0x928 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP5 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xA3F JUMPI JUMPDEST DUP3 AND SWAP6 DUP7 ISZERO PUSH2 0xA2D JUMPI PUSH2 0x980 SWAP4 PUSH2 0x95E SWAP3 PUSH2 0xA23 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0x9A8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0x9D9 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x9F1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x9FE JUMPI JUMPDEST POP PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x9F8 JUMPI PUSH2 0xA1B SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0xA83 PUSH2 0x924 PUSH2 0xA7C CALLER PUSH2 0xA65 DUP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x92D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0xAB9 DUP3 DUP3 DUP7 PUSH2 0x8D9 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xAC6 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xACF SWAP4 PUSH2 0xB65 JUMP JUMPDEST ISZERO PUSH2 0xADD JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x10E JUMPI MLOAD PUSH2 0x1D2 DUP2 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1D2 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB60 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xB46 DUP3 PUSH2 0x6DC JUMP JUMPDEST SWAP2 PUSH2 0xB54 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6BA JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP2 PUSH2 0xB8E SWAP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP11 DUP12 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0xB04 JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xBDE JUMPI JUMPDEST POP PUSH2 0xBD0 JUMPI PUSH2 0xBB1 PUSH2 0xB35 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ SWAP1 JUMP JUMPDEST PUSH2 0xC00 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xC07 JUMPI JUMPDEST PUSH2 0xBF8 DUP2 DUP4 PUSH2 0x6BA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAEF JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xBA4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xBEE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D GAS SWAP11 DELEGATECALL EXTCODECOPY 0xD8 GASLIMIT PUSH26 0x5190A07F841648FBED40D3201A10A1A4A4C029614FE980346473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "895:40452:0:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;895:40452:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;5012:13;895:40452;;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;;;-1:-1:-1;895:40452:0;;;;-1:-1:-1;;;;895:40452:0;;;;;;;;;;;5012:13;895:40452;;;;;;;;;5035:17;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;-1:-1:-1;895:40452:0;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;895:40452:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;-1:-1:-1;895:40452:0;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;-1:-1:-1;895:40452:0;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;-1:-1:-1;895:40452:0;;;;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;5012:13;-1:-1:-1;895:40452:0;;-1:-1:-1;895:40452:0;;-1:-1:-1;895:40452:0;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;;5012:13;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5012:13;-1:-1:-1;895:40452:0;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;;-1:-1:-1;;895:40452:0;;;-1:-1:-1;;;;;895:40452:0;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;895:40452:0;;;;;;;;;;-1:-1:-1;;895:40452:0;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_4017": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_addresst_uint256": {
									"entryPoint": 1083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_bytes4_fromMemory": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_address_uint256_bytes": {
									"entryPoint": 2820,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_to_string": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage_4015": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_string": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"external_fun_approve": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_balanceOf": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getApproved": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_isApprovedForAll": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_name": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_ownerOf": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom_981": {
									"entryPoint": 1784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setApprovalForAll": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_supportsInterface": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_symbol": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokenURI": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_totalSupply": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_transferFrom": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"extract_returndata": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_6021": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkContractOnERC721Received": {
									"entryPoint": 2917,
									"id": 1062,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"fun_exists": {
									"entryPoint": 2224,
									"id": 746,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_getApprovedSlotAndAddress": {
									"entryPoint": null,
									"id": 779,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"fun_isSenderApprovedOrOwner": {
									"entryPoint": null,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_packedOwnershipOf": {
									"entryPoint": 2114,
									"id": 532,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_safeTransferFrom": {
									"entryPoint": 2731,
									"id": 981,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_transferFrom": {
									"entryPoint": 2265,
									"id": 924,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address_4039": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address_4040": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_uint256_uint256_of_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"read_from_storage_split_offset_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"update_storage_value_offsett_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f757806306fdde03146100f2578063081812fc146100ed578063095ea7b3146100e857806318160ddd146100e357806323b872dd146100de57806342842e0e146100d95780636352211e146100d457806370a08231146100cf57806395d89b41146100ca578063a22cb465146100c5578063b88d4fde146100c0578063c87b56dd146100bb5763e985e9c5146100b657600080fd5b6107e5565b61077c565b6106f8565b6105f5565b610532565b6104d6565b6104a7565b610484565b610470565b610418565b610361565b6102e1565b6101d5565b610113565b6001600160e01b031981160361010e57565b600080fd5b3461010e57602036600319011261010e576020600435610132816100fc565b63ffffffff60e01b166301ffc9a760e01b8114908115610170575b811561015f575b506040519015158152f35b635b5e139f60e01b14905038610154565b6380ac58cd60e01b8114915061014d565b919082519283825260005b8481106101ad575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161018c565b9060206101d2928181520190610181565b90565b3461010e576000806003193601126102de5760405190806002549060019180831c928082169283156102d4575b60209283861085146102c057858852602088019490811561029f5750600114610246575b61024287610236818903826106ba565b604051918291826101c1565b0390f35b600260005294509192917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b83861061028e5750505091019050610236826102423880610226565b805485870152948201948101610272565b60ff191685525050505090151560051b019050610236826102423880610226565b634e487b7160e01b82526022600452602482fd5b93607f1693610202565b80fd5b3461010e57602036600319011261010e576004356102fe816108b0565b15610323576000526006602052602060018060a01b0360406000205416604051908152f35b6040516333d1c03960e21b8152600490fd5b600435906001600160a01b038216820361010e57565b602435906001600160a01b038216820361010e57565b604036600319011261010e57610375610335565b6024356001600160a01b038061038a83610842565b16908133036103e5575b600083815260066020526040812080546001600160a01b0319166001600160a01b0387161790559316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b600082815260076020908152604080832033845290915290205460ff16610394576040516367d9dca160e11b8152600490fd5b3461010e57600036600319011261010e5760206000546001549003604051908152f35b606090600319011261010e576001600160a01b0390600435828116810361010e5791602435908116810361010e579060443590565b61048261047c3661043b565b916108d9565b005b6104826104903661043b565b906040519261049e84610699565b60008452610aab565b3461010e57602036600319011261010e5760206001600160a01b036104cd600435610842565b16604051908152f35b3461010e57602036600319011261010e576001600160a01b036104f7610335565b168015610520576000526005602052602067ffffffffffffffff60406000205416604051908152f35b6040516323d3ad8160e21b8152600490fd5b3461010e576000806003193601126102de5760405190806003549060019180831c928082169283156105eb575b60209283861085146102c057858852602088019490811561029f57506001146105925761024287610236818903826106ba565b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8386106105da5750505091019050610236826102423880610226565b8054858701529482019481016105be565b93607f169361055f565b3461010e57604036600319011261010e5761060e610335565b6024359081151580920361010e573360009081526007602090815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106b557604052565b610683565b90601f8019910116810190811067ffffffffffffffff8211176106b557604052565b67ffffffffffffffff81116106b557601f01601f191660200190565b608036600319011261010e5761070c610335565b61071461034b565b6064359167ffffffffffffffff831161010e573660238401121561010e57826004013591610741836106dc565b9261074f60405194856106ba565b808452366024828701011161010e5760208160009260246104829801838801378501015260443591610aab565b3461010e57602036600319011261010e576107986004356108b0565b156107d35760006040516107ab81610699565b526102426040516107bb81610699565b60008152604051918291602083526020830190610181565b604051630a14c4b560e41b8152600490fd5b3461010e57604036600319011261010e57602060ff610836610805610335565b61080d61034b565b6001600160a01b0391821660009081526007865260408082209290931681526020919091522090565b54166040519015158152f35b60008181548110610860575b604051636f96cda160e11b8152600490fd5b81526004906020918083526040928383205494600160e01b8616156108875750505061084e565b93929190935b851561089b57505050505090565b6000190180835281855283832054955061088d565b600054811090816108bf575090565b90506000526004602052600160e01b604060002054161590565b906108e383610842565b6001600160a01b0383811692828216849003610a9a576000868152600660205260409020805490926109286001600160a01b03881633908114908414171590565b1590565b610a3f575b8216958615610a2d576109809361095e92610a23575b506001600160a01b0316600090815260056020526040902090565b80546000190190556001600160a01b0316600090815260056020526040902090565b80546001019055600160e11b804260a01b8517176109a8866000526004602052604060002090565b558116156109d9575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b600184016109f1816000526004602052604060002090565b54156109fe575b506109b1565b60005481146109f857610a1b906000526004602052604060002090565b5538806109f8565b6000905538610943565b604051633a954ecd60e21b8152600490fd5b610a83610924610a7c33610a658b60018060a01b03166000526007602052604060002090565b9060018060a01b0316600052602052604060002090565b5460ff1690565b1561092d57604051632ce44b5f60e11b8152600490fd5b60405162a1148160e81b8152600490fd5b929190610ab98282866108d9565b803b610ac6575b50505050565b610acf93610b65565b15610add5738808080610ac0565b6040516368d2bf6b60e11b8152600490fd5b9081602091031261010e57516101d2816100fc565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526101d292910190610181565b3d15610b60573d90610b46826106dc565b91610b5460405193846106ba565b82523d6000602084013e565b606090565b92602091610b8e936000604051809681958294630a85bd0160e11b9a8b85523360048601610b04565b03926001600160a01b03165af160009181610bde575b50610bd057610bb1610b35565b80519081610bcb576040516368d2bf6b60e11b8152600490fd5b602001fd5b6001600160e01b0319161490565b610c0091925060203d8111610c07575b610bf881836106ba565b810190610aef565b9038610ba4565b503d610bee56fea26469706673582212204d5a9af43cd845795190a07f841648fbed40d3201a10a1a4a4c029614fe9803464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xBB JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x132 DUP2 PUSH2 0xFC JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x170 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x15F JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x154 JUMP JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x14D JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1AD JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x18C JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x1D2 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x2D4 JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x2C0 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x29F JUMPI POP PUSH1 0x1 EQ PUSH2 0x246 JUMPI JUMPDEST PUSH2 0x242 DUP8 PUSH2 0x236 DUP2 DUP10 SUB DUP3 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP4 DUP7 LT PUSH2 0x28E JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x236 DUP3 PUSH2 0x242 CODESIZE DUP1 PUSH2 0x226 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x272 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 MSTORE POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x236 DUP3 PUSH2 0x242 CODESIZE DUP1 PUSH2 0x226 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x202 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2FE DUP2 PUSH2 0x8B0 JUMP JUMPDEST ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x375 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x38A DUP4 PUSH2 0x842 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x3E5 JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x394 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x10E JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x10E JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x482 PUSH2 0x47C CALLDATASIZE PUSH2 0x43B JUMP JUMPDEST SWAP2 PUSH2 0x8D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x482 PUSH2 0x490 CALLDATASIZE PUSH2 0x43B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x49E DUP5 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xAAB JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4CD PUSH1 0x4 CALLDATALOAD PUSH2 0x842 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4F7 PUSH2 0x335 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x5EB JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x2C0 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x29F JUMPI POP PUSH1 0x1 EQ PUSH2 0x592 JUMPI PUSH2 0x242 DUP8 PUSH2 0x236 DUP2 DUP10 SUB DUP3 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP7 LT PUSH2 0x5DA JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x236 DUP3 PUSH2 0x242 CODESIZE DUP1 PUSH2 0x226 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x5BE JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x55F JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x60E PUSH2 0x335 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x10E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6B5 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x70C PUSH2 0x335 JUMP JUMPDEST PUSH2 0x714 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x10E JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x10E JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x741 DUP4 PUSH2 0x6DC JUMP JUMPDEST SWAP3 PUSH2 0x74F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x6BA JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0x10E JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x482 SWAP9 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xAAB JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x798 PUSH1 0x4 CALLDATALOAD PUSH2 0x8B0 JUMP JUMPDEST ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x7AB DUP2 PUSH2 0x699 JUMP JUMPDEST MSTORE PUSH2 0x242 PUSH1 0x40 MLOAD PUSH2 0x7BB DUP2 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x836 PUSH2 0x805 PUSH2 0x335 JUMP JUMPDEST PUSH2 0x80D PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x860 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP4 KECCAK256 SLOAD SWAP5 PUSH1 0x1 PUSH1 0xE0 SHL DUP7 AND ISZERO PUSH2 0x887 JUMPI POP POP POP PUSH2 0x84E JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 JUMPDEST DUP6 ISZERO PUSH2 0x89B JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD DUP1 DUP4 MSTORE DUP2 DUP6 MSTORE DUP4 DUP4 KECCAK256 SLOAD SWAP6 POP PUSH2 0x88D JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT SWAP1 DUP2 PUSH2 0x8BF JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x8E3 DUP4 PUSH2 0x842 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 DUP3 DUP3 AND DUP5 SWAP1 SUB PUSH2 0xA9A JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 PUSH2 0x928 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP5 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xA3F JUMPI JUMPDEST DUP3 AND SWAP6 DUP7 ISZERO PUSH2 0xA2D JUMPI PUSH2 0x980 SWAP4 PUSH2 0x95E SWAP3 PUSH2 0xA23 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0x9A8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0x9D9 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x9F1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x9FE JUMPI JUMPDEST POP PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x9F8 JUMPI PUSH2 0xA1B SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0xA83 PUSH2 0x924 PUSH2 0xA7C CALLER PUSH2 0xA65 DUP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x92D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0xAB9 DUP3 DUP3 DUP7 PUSH2 0x8D9 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xAC6 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xACF SWAP4 PUSH2 0xB65 JUMP JUMPDEST ISZERO PUSH2 0xADD JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x10E JUMPI MLOAD PUSH2 0x1D2 DUP2 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1D2 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB60 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xB46 DUP3 PUSH2 0x6DC JUMP JUMPDEST SWAP2 PUSH2 0xB54 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6BA JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP2 PUSH2 0xB8E SWAP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP11 DUP12 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0xB04 JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xBDE JUMPI JUMPDEST POP PUSH2 0xBD0 JUMPI PUSH2 0xBB1 PUSH2 0xB35 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ SWAP1 JUMP JUMPDEST PUSH2 0xC00 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xC07 JUMPI JUMPDEST PUSH2 0xBF8 DUP2 DUP4 PUSH2 0x6BA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAEF JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xBA4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xBEE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D GAS SWAP11 DELEGATECALL EXTCODECOPY 0xD8 GASLIMIT PUSH26 0x5190A07F841648FBED40D3201A10A1A4A4C029614FE980346473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "895:40452:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;;895:40452:0;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;895:40452:0;;;;;;;;;;:::i;:::-;;;;;;;;9558:25;;:101;;;;;895:40452;9558:177;;;;895:40452;;;;;;;;;;9558:177;-1:-1:-1;;;9710:25:0;;-1:-1:-1;9558:177:0;;;:101;-1:-1:-1;;;9634:25:0;;;-1:-1:-1;9558:101:0;;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;10125:5;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;10125:5;895:40452;;;-1:-1:-1;895:40452:0;;;;;;;;;;-1:-1:-1;;;895:40452:0;;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;895:40452:0;;;-1:-1:-1;;;;895:40452:0;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;-1:-1:-1;;;895:40452:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;895:40452:0;;;;;;16460:16;;;:::i;:::-;16459:17;16455:64;;-1:-1:-1;895:40452:0;16537:15;895:40452;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;;16455:64;895:40452;;-1:-1:-1;;;16485:34:0;;895:40452;;16485:34;895:40452;;;;-1:-1:-1;;;;;895:40452:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;895:40452:0;;;;;;:::o;:::-;;;-1:-1:-1;;895:40452:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;895:40452:0;11505:27;895:40452;11505:27;:::i;:::-;895:40452;39523:10;;;15947:28;15943:172;;895:40452;-1:-1:-1;895:40452:0;;;16125:15;895:40452;;;;;;;-1:-1:-1;;;;;;895:40452:0;-1:-1:-1;;;;;895:40452:0;;;;;-1:-1:-1;895:40452:0;16175:28;;;;;895:40452;;15943:172;-1:-1:-1;895:40452:0;;;17402:18;895:40452;;;;;;;;39523:10;895:40452;;;;;;;;;;15943:172;15989:126;895:40452;;-1:-1:-1;;;16065:35:0;;895:40452;;16065:35;895:40452;;;;;;-1:-1:-1;;895:40452:0;;;;;;;6164:12;895:40452;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;895:40452:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;22899:39;895:40452;;;:::i;:::-;;;;;;;;:::i;:::-;;;;22899:39;:::i;895:40452::-;;;;;;-1:-1:-1;;895:40452:0;;;;;-1:-1:-1;;;;;11505:27:0;895:40452;;11505:27;:::i;:::-;895:40452;;;;;;;;;;;;;-1:-1:-1;;895:40452:0;;;;-1:-1:-1;;;;;895:40452:0;;:::i;:::-;;7140:19;;7136:60;;-1:-1:-1;895:40452:0;7213:18;895:40452;;;1360:13;895:40452;-1:-1:-1;895:40452:0;;7213:55;895:40452;;;;;;7136:60;895:40452;;-1:-1:-1;;;7168:28:0;;895:40452;;7168:28;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10296:7;895:40452;;;-1:-1:-1;895:40452:0;;;;;;;;;;-1:-1:-1;;;895:40452:0;;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;895:40452:0;;;;;;:::i;:::-;;;;;;;;;;;;39523:10;-1:-1:-1;895:40452:0;;;16995:18;895:40452;;;;;;;;-1:-1:-1;;;;;895:40452:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39523:10;17070:55;895:40452;39523:10;17070:55;;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;895:40452:0;;;;:::o;:::-;;;-1:-1:-1;;895:40452:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;895:40452:0;;;;10514:16;895:40452;;10514:16;:::i;:::-;10513:17;10509:59;;-1:-1:-1;895:40452:0;;;;;:::i;:::-;;;;;;;;:::i;:::-;-1:-1:-1;895:40452:0;;;;;;;;;;;;;;;:::i;10509:59::-;895:40452;;-1:-1:-1;;;10539:29:0;;895:40452;;10539:29;895:40452;;;;;;-1:-1:-1;;895:40452:0;;;;;;17402:35;895:40452;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;895:40452:0;;;-1:-1:-1;895:40452:0;;;17402:18;895:40452;;;;;;;;;;;;-1:-1:-1;895:40452:0;;;;;;;17402:35;895:40452;;;;;;;;;;12515:1249;895:40452;12601:22;895:40452;;12707:20;;12703:997;;12515:1249;895:40452;;-1:-1:-1;;;13726:31:0;;;;;12703:997;895:40452;;12768:17;895:40452;;;;;;;;;;;;2118:8;895:40452;2118:8;;12855:24;;:29;12851:831;;12703:997;;;;;12851:831;13510:111;;;;;13517:11;;;;;13646:13;;;;;;:::o;13510:111::-;-1:-1:-1;;2118:8:0;895:40452;;;;;;;;;;;-1:-1:-1;13510:111:0;;17693:277;5508:1;895:40452;17835:23;;17793:151;;;;17774:170;17693:277;:::o;17793:151::-;895:40452;;5508:1;895:40452;17895:17;895:40452;;;2118:8;;895:40452;5508:1;895:40452;;17895:44;:49;17693:277;:::o;19903:2764::-;;20070:27;;;:::i;:::-;-1:-1:-1;;;;;895:40452:0;;;;;;;20112:45;;;20108:86;;-1:-1:-1;895:40452:0;;;19036:15;895:40452;;;;;19164:132;;39523:10;;20393:69;-1:-1:-1;;;;;18242:472:0;;39523:10;18242:472;;;;;;;20393:69;;895:40452;20394:68;20393:69;;895:40452;20393:69;20389:179;;19903:2764;895:40452;;20583:16;;;20579:52;;21368:22;20748:190;21300:24;20748:190;;;19903:2764;-1:-1:-1;;;;;;895:40452:0;;;;;21300:18;895:40452;;;;;;;21300:24;895:40452;;-1:-1:-1;;2118:8:0;895:40452;;-1:-1:-1;;;;;895:40452:0;;;;;21300:18;895:40452;;;;;;;21368:22;895:40452;;;;;;;2392:8;;14403:331;;;;;;;21654:26;;895:40452;;21654:17;895:40452;;;;;;;21654:26;895:40452;21943:47;;:52;21939:617;;19903:2764;22581:27;;-1:-1:-1;22581:27:0;;19903:2764::o;21939:617::-;895:40452;2392:8;;22168:30;;895:40452;;21654:17;895:40452;;;;;;;22168:30;895:40452;22168:35;22164:378;;21939:617;;;;22164:378;-1:-1:-1;895:40452:0;22285:239;;22164:378;22285:239;22449:30;;895:40452;;21654:17;895:40452;;;;;;;22449:30;895:40452;22285:239;;22164:378;;20748:190;20597:1;20748:190;;;;;20579:52;895:40452;;-1:-1:-1;;;20608:23:0;;;;;20389:179;20480:44;17402:35;;39523:10;17402:25;;895:40452;;;;;;;;17402:18;895:40452;;;;;;;17402:25;895:40452;;;;;;;;;;;;;;;;17402:35;895:40452;;;;;20480:44;20476:92;20389:179;20476:92;895:40452;;-1:-1:-1;;;20533:35:0;;;;;20108:86;895:40452;;-1:-1:-1;;;20166:28:0;;;;;23526:396;;;;23718:7;;;;;:::i;:::-;23740:14;;23736:180;;23526:396;;;;;:::o;23736:180::-;23778:56;;;:::i;:::-;23777:57;23773:143;;23736:180;;;;;;23773:143;895:40452;;-1:-1:-1;;;23861:40:0;;;;;895:40452;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;895:40452:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;895:40452:0;;;;:::o;:::-;;;:::o;25948:697::-;;26126:88;25948:697;26126:88;25948:697;895:40452;;;;;;;;;;;;26126:88;;;;39523:10;26126:88;;;;:::i;:::-;;;-1:-1:-1;;;;;895:40452:0;26126:88;;895:40452;;26126:88;;;25948:697;-1:-1:-1;26122:517:0;;26358:281;;:::i;:::-;895:40452;;;26404:18;;;895:40452;;-1:-1:-1;;;26449:40:0;;26126:88;;26449:40;26400:229;26126:88;26528:87;;26122:517;-1:-1:-1;;;;;;895:40452:0;26282:64;;26275:71::o;26126:88::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "628000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2614",
								"getApproved(uint256)": "6748",
								"isApprovedForAll(address,address)": "2886",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26665",
								"supportsInterface(bytes4)": "373",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4459",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4330",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 41347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SLT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 895,
									"end": 41347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 895,
									"end": 41347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "17"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "21"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B71"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "7F"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B71"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "7F"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SLT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 41347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d5a9af43cd845795190a07f841648fbed40d3201a10a1a4a4c029614fe9803464736f6c63430008130033",
									".code": [
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10130,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10130,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 16460,
											"end": 16476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16459,
											"end": 16476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16537,
											"end": 16552,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11505,
											"end": 11532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16125,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 17420,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22899,
											"end": 22938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11505,
											"end": 11532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "7F"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16995,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 10514,
											"end": 10530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10513,
											"end": 10530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 17420,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12601,
											"end": 12623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12727,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12768,
											"end": 12785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12879,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13517,
											"end": 13528,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 13517,
											"end": 13528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13517,
											"end": 13528,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13517,
											"end": 13528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13517,
											"end": 13528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 13517,
											"end": 13528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17835,
											"end": 17858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17835,
											"end": 17858,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17774,
											"end": 17944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17895,
											"end": 17912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5508,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17895,
											"end": 17939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17895,
											"end": 17944,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 20070,
											"end": 20097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19036,
											"end": 19051,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19164,
											"end": 19296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19164,
											"end": 19296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20393,
											"end": 20462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18242,
											"end": 18714,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18714,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18242,
											"end": 18714,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20393,
											"end": 20462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20393,
											"end": 20462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20393,
											"end": 20462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20393,
											"end": 20462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20393,
											"end": 20462,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 20393,
											"end": 20462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 20748,
											"end": 20938,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 20748,
											"end": 20938,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20748,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 20748,
											"end": 20938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21300,
											"end": 21318,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21300,
											"end": 21318,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14734,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14734,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 14403,
											"end": 14734,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14734,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14734,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14734,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21943,
											"end": 21990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21943,
											"end": 21990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21943,
											"end": 21995,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 19903,
											"end": 22667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22168,
											"end": 22203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20748,
											"end": 20938,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 20748,
											"end": 20938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20597,
											"end": 20598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20748,
											"end": 20938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20748,
											"end": 20938,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20748,
											"end": 20938,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 20748,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 20748,
											"end": 20938,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 17420,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20524,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 20480,
											"end": 20524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 23725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 23718,
											"end": 23725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 23725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 23725,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 23725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23718,
											"end": 23725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 23725,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 23718,
											"end": 23725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 23778,
											"end": 23834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23777,
											"end": 23834,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "A85BD01"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26126,
											"end": 26214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26358,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 26358,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26358,
											"end": 26639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26358,
											"end": 26639,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 26358,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26404,
											"end": 26422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26404,
											"end": 26422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 26404,
											"end": 26422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26528,
											"end": 26615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26528,
											"end": 26615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26275,
											"end": 26346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26126,
											"end": 26214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26126,
											"end": 26214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/erc721a/contracts/ERC721A.sol",
								".deps/npm/erc721a/contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\".deps/npm/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\".deps/npm/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": ".deps/npm/erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 93,
								"contract": ".deps/npm/erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 95,
								"contract": ".deps/npm/erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 97,
								"contract": ".deps/npm/erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 101,
								"contract": ".deps/npm/erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 105,
								"contract": ".deps/npm/erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 110,
								"contract": ".deps/npm/erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)23_storage)"
							},
							{
								"astId": 116,
								"contract": ".deps/npm/erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)23_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)23_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)23_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 22,
										"contract": ".deps/npm/erc721a/contracts/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\".deps/npm/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\".deps/npm/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/erc721a/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\".deps/npm/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/erc721a/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": ".deps/npm/erc721a/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1622
						],
						"ERC721A__IERC721Receiver": [
							17
						],
						"IERC721A": [
							1828
						]
					},
					"id": 1623,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:0"
						},
						{
							"absolutePath": ".deps/npm/erc721a/contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1623,
							"sourceUnit": 1829,
							"src": "109:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "135:51:0",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "197:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "237:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "271:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "263:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "297:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "289:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "336:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "336:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:108:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "380:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:0"
									},
									"scope": 17,
									"src": "228:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1623,
							"src": "187:203:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "IERC721A",
										"nameLocations": [
											"915:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1828,
										"src": "915:8:0"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "915:8:0"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 18,
								"nodeType": "StructuredDocumentation",
								"src": "392:502:0",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1622,
							"linearizedBaseContracts": [
								1622,
								1828
							],
							"name": "ERC721A",
							"nameLocation": "904:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1057:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "1049:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1022:16:0",
									"nodeType": "StructDefinition",
									"scope": 1622,
									"src": "1015:54:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 31,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1330:27:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "1305:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1305:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1361:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1366:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 28,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1360:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 29,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1372:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1360:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 34,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1471:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "1446:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1446:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1495:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 37,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1595:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "1570:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1570:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 36,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1619:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 40,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1711:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "1686:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 38,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1686:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 39,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1725:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 48,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1841:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "1816:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 41,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1816:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1868:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1873:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1868:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 45,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1867:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 46,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1880:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1867:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 51,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "1978:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "1953:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1953:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 50,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2004:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 56,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2100:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "2075:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2075:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 53,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2118:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 54,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2123:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2118:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 59,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2232:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "2207:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2207:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2259:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 64,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2364:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "2339:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2339:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 61,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2392:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 62,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2397:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2392:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 67,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2492:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "2467:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2467:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2513:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 75,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2634:30:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "2609:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 68,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2609:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 74,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2668:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2673:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2668:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 72,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2667:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 73,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2680:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2667:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 83,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2766:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "2741:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 76,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2741:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2786:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2791:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2786:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 80,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2785:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 81,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2798:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2785:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 86,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3107:32:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "3082:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 84,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3082:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3142:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 89,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3293:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "3268:127:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 87,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3268:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 88,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3329:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3638:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "3622:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 90,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3622:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 93,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3710:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "3694:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 92,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3694:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3762:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "3747:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 94,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3747:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3809:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "3794:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 96,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3794:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 101,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4236:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "4200:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 100,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 98,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4208:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4200:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 99,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4219:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 105,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4495:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "4459:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 104,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 102,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 103,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 110,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4615:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "4570:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 109,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 106,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4578:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4570:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 108,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 107,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"4589:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "4589:16:0"
											},
											"referencedDeclaration": 23,
											"src": "4589:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 116,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4738:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "4685:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 115,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 111,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4693:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4685:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 114,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 112,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4712:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4704:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 113,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4723:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "5002:98:0",
										"statements": [
											{
												"expression": {
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 123,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "5012:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 124,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "5020:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5012:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "5012:13:0"
											},
											{
												"expression": {
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 127,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "5035:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 128,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "5045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5035:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "5035:17:0"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 131,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "5062:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 132,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "5078:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5078:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5062:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "5062:31:0"
											}
										]
									},
									"id": 137,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4972:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "4958:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4958:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4993:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "4979:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 119,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4979:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:44:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5002:0:0"
									},
									"scope": 1622,
									"src": "4946:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "5491:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5508:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 142,
												"id": 144,
												"nodeType": "Return",
												"src": "5501:8:0"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "5296:125:0",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5435:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5448:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "5482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5481:9:0"
									},
									"scope": 1622,
									"src": "5426:90:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "5654:37:0",
										"statements": [
											{
												"expression": {
													"id": 152,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "5671:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 151,
												"id": 153,
												"nodeType": "Return",
												"src": "5664:20:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "5522:63:0",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5599:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5611:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5645:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:9:0"
									},
									"scope": 1622,
									"src": "5590:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1679
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "5964:247:0",
										"statements": [
											{
												"id": 169,
												"nodeType": "UncheckedBlock",
												"src": "6117:88:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 162,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "6148:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 163,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "6164:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6148:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 165,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "6179:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6148:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 161,
														"id": 168,
														"nodeType": "Return",
														"src": "6141:53:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5697:192:0",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5903:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5937:8:0"
									},
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5914:2:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "5955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:0"
									},
									"scope": 1622,
									"src": "5894:317:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "6368:226:0",
										"statements": [
											{
												"id": 182,
												"nodeType": "UncheckedBlock",
												"src": "6515:73:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 177,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "6546:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "6562:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6562:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6546:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 176,
														"id": 181,
														"nodeType": "Return",
														"src": "6539:38:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6217:82:0",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6325:2:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6359:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:9:0"
									},
									"scope": 1622,
									"src": "6304:290:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "6735:36:0",
										"statements": [
											{
												"expression": {
													"id": 190,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 93,
													"src": "6752:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 191,
												"nodeType": "Return",
												"src": "6745:19:0"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "6600:66:0",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6680:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6692:2:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6726:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6725:9:0"
									},
									"scope": 1622,
									"src": "6671:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1722
									],
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "7126:149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 202,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "7140:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7157:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 203,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7149:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7140:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 211,
												"nodeType": "IfStatement",
												"src": "7136:60:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 208,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "7168:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7168:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 210,
													"nodeType": "RevertStatement",
													"src": "7161:35:0"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 212,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "7213:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 214,
														"indexExpression": {
															"id": 213,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "7232:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7213:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 215,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7241:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7213:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 201,
												"id": 217,
												"nodeType": "Return",
												"src": "7206:62:0"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "6966:74:0",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7054:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 198,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7099:8:0"
									},
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7072:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "7064:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7063:15:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "7117:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7116:9:0"
									},
									"scope": 1622,
									"src": "7045:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "7422:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 227,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "7440:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 229,
																	"indexExpression": {
																		"id": 228,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "7459:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7440:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 230,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "7469:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7440:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 232,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7439:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 233,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7494:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7439:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 235,
												"nodeType": "Return",
												"src": "7432:89:0"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "7281:66:0",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7361:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7383:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7375:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7374:15:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7413:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7412:9:0"
									},
									"scope": 1622,
									"src": "7352:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "7691:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 245,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "7709:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 247,
																	"indexExpression": {
																		"id": 246,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "7728:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7709:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 248,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "7738:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 250,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7708:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 251,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7763:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7708:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 253,
												"nodeType": "Return",
												"src": "7701:89:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "7534:82:0",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7630:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "7644:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7643:15:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "7682:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7681:9:0"
									},
									"scope": 1622,
									"src": "7621:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "7973:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 265,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "7997:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 267,
																"indexExpression": {
																	"id": 266,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "8016:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7997:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 268,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "8026:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7997:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7990:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 263,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7990:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7990:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 262,
												"id": 271,
												"nodeType": "Return",
												"src": "7983:55:0"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7803:102:0",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7919:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7935:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "7927:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7926:15:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "7965:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 260,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7965:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7964:8:0"
									},
									"scope": 1622,
									"src": "7910:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "8288:334:0",
										"statements": [
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8306:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "8298:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8298:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": {
													"baseExpression": {
														"id": 283,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "8315:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 285,
													"indexExpression": {
														"id": 284,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8334:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8315:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8298:42:0"
											},
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8358:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "8350:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8350:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 289,
												"nodeType": "VariableDeclarationStatement",
												"src": "8350:17:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8450:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8464:16:0",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8477:3:0"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8464:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 278,
														"isOffset": false,
														"isSlot": false,
														"src": "8477:3:0",
														"valueSize": 1
													},
													{
														"declaration": 288,
														"isOffset": false,
														"isSlot": false,
														"src": "8464:9:0",
														"valueSize": 1
													}
												],
												"id": 290,
												"nodeType": "InlineAssembly",
												"src": "8441:49:0"
											},
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 291,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "8499:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 292,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "8509:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 293,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "8518:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8509:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 295,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8508:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 296,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8546:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 297,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "8559:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8546:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 299,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8545:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8508:63:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8499:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "8499:72:0"
											},
											{
												"expression": {
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 303,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "8581:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 305,
														"indexExpression": {
															"id": 304,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8600:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8581:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 306,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "8609:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8581:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "8581:34:0"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "8051:171:0",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8236:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8252:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8244:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8266:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8259:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 277,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8259:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8243:27:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8288:0:0"
									},
									"scope": 1622,
									"src": "8227:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1687
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "9246:539:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9558:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9573:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9558:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 322,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9634:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9649:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "9634:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9558:101:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 326,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "9710:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9725:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "9710:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9558:177:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 318,
												"id": 330,
												"nodeType": "Return",
												"src": "9539:196:0"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "8809:341:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9164:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 315,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9222:8:0"
									},
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9189:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "9182:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 312,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9182:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9181:20:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "9240:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9240:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9239:6:0"
									},
									"scope": 1622,
									"src": "9155:630:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1802
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "10108:29:0",
										"statements": [
											{
												"expression": {
													"id": 339,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 95,
													"src": "10125:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 338,
												"id": 340,
												"nodeType": "Return",
												"src": "10118:12:0"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "9976:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10048:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 335,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10075:8:0"
									},
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10052:2:0"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "10093:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10092:15:0"
									},
									"scope": 1622,
									"src": "10039:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1808
									],
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "10279:31:0",
										"statements": [
											{
												"expression": {
													"id": 349,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 97,
													"src": "10296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 348,
												"id": 350,
												"nodeType": "Return",
												"src": "10289:14:0"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "10143:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10217:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 345,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10246:8:0"
									},
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:2:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "10264:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10264:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10263:15:0"
									},
									"scope": 1622,
									"src": "10208:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1816
									],
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "10499:225:0",
										"statements": [
											{
												"condition": {
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10513:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 362,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "10522:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 361,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "10514:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10514:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "10509:59:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 365,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "10539:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10539:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 367,
													"nodeType": "RevertStatement",
													"src": "10532:36:0"
												}
											},
											{
												"assignments": [
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10593:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "10579:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 369,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10579:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 373,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 371,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "10603:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10603:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10579:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 376,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "10636:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10630:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 374,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10630:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10630:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10645:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10630:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10655:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10630:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10715:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10630:87:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 385,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "10683:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 387,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 355,
																				"src": "10702:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 386,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "10692:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10692:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 383,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10666:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10670:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10666:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10666:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10659:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 381,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10659:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10659:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 360,
												"id": 393,
												"nodeType": "Return",
												"src": "10623:94:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "10316:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10420:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 357,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10466:8:0"
									},
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10437:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "10429:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10428:17:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "10484:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10484:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10483:15:0"
									},
									"scope": 1622,
									"src": "10411:313:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "11035:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11052:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 400,
												"id": 402,
												"nodeType": "Return",
												"src": "11045:9:0"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "10730:234:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "10978:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10986:2:0"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "11020:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 398,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11020:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11019:15:0"
									},
									"scope": 1622,
									"src": "10969:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1730
									],
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "11472:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 418,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "11524:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 417,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "11505:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11505:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11497:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 415,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11497:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11497:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 413,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11489:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 412,
												"id": 422,
												"nodeType": "Return",
												"src": "11482:52:0"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "11255:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11400:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 409,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11445:8:0"
									},
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11416:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "11408:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11407:17:0"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "11463:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11462:9:0"
									},
									"scope": 1622,
									"src": "11391:150:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "11817:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 435,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "11872:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 434,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "11853:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11853:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 433,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "11834:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1673_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11834:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1673_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 432,
												"id": 438,
												"nodeType": "Return",
												"src": "11827:54:0"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "11547:172:0",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "11733:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11754:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "11746:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11745:17:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "11794:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1673_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 429,
														"name": "TokenOwnership",
														"nameLocations": [
															"11794:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1673,
														"src": "11794:14:0"
													},
													"referencedDeclaration": 1673,
													"src": "11794:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1673_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11793:23:0"
									},
									"scope": 1622,
									"src": "11724:164:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "12070:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 450,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12106:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 452,
															"indexExpression": {
																"id": 451,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "12124:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12106:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "12087:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1673_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12087:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1673_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 448,
												"id": 454,
												"nodeType": "Return",
												"src": "12080:51:0"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "11894:80:0",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "11988:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12009:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "12001:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12000:15:0"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "12047:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1673_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 446,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 445,
														"name": "TokenOwnership",
														"nameLocations": [
															"12047:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1673,
														"src": "12047:14:0"
													},
													"referencedDeclaration": 1673,
													"src": "12047:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1673_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12046:23:0"
									},
									"scope": 1622,
									"src": "11979:159:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "12310:128:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 462,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "12324:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 464,
														"indexExpression": {
															"id": 463,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "12342:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12324:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12324:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "12320:112:0",
												"trueBody": {
													"id": 475,
													"nodeType": "Block",
													"src": "12355:77:0",
													"statements": [
														{
															"expression": {
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 467,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 101,
																		"src": "12369:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 469,
																	"indexExpression": {
																		"id": 468,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "12387:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12369:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 471,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "12415:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 470,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "12396:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12396:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12369:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 474,
															"nodeType": "ExpressionStatement",
															"src": "12369:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "12144:97:0",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12255:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12286:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "12278:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12277:15:0"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12310:0:0"
									},
									"scope": 1622,
									"src": "12246:192:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "12591:1173:0",
										"statements": [
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "12609:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "12601:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12601:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"id": 488,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 481,
													"src": "12616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12601:22:0"
											},
											{
												"id": 527,
												"nodeType": "UncheckedBlock",
												"src": "12634:1076:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 490,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "12662:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12662:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 492,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "12681:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 526,
														"nodeType": "IfStatement",
														"src": "12658:1042:0",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 494,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "12707:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 495,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "12714:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12707:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 525,
															"nodeType": "IfStatement",
															"src": "12703:997:0",
															"trueBody": {
																"id": 524,
																"nodeType": "Block",
																"src": "12729:971:0",
																"statements": [
																	{
																		"assignments": [
																			498
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 498,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "12759:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 524,
																				"src": "12751:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 497,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12751:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 502,
																		"initialValue": {
																			"baseExpression": {
																				"id": 499,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "12768:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 501,
																			"indexExpression": {
																				"id": 500,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 487,
																				"src": "12786:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12768:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12751:40:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 503,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 498,
																					"src": "12855:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 504,
																					"name": "_BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 56,
																					"src": "12864:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12855:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12883:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "12855:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 523,
																		"nodeType": "IfStatement",
																		"src": "12851:831:0",
																		"trueBody": {
																			"id": 522,
																			"nodeType": "Block",
																			"src": "12886:796:0",
																			"statements": [
																				{
																					"body": {
																						"id": 518,
																						"nodeType": "Block",
																						"src": "13530:91:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 516,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 511,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 498,
																										"src": "13560:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 512,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 101,
																											"src": "13569:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 515,
																										"indexExpression": {
																											"id": 514,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "13587:6:0",
																											"subExpression": {
																												"id": 513,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 487,
																												"src": "13589:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "13569:25:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "13560:34:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 517,
																								"nodeType": "ExpressionStatement",
																								"src": "13560:34:0"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 510,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 508,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 498,
																							"src": "13517:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 509,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13527:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13517:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 519,
																					"nodeType": "WhileStatement",
																					"src": "13510:111:0"
																				},
																				{
																					"expression": {
																						"id": 520,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 498,
																						"src": "13653:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 485,
																					"id": 521,
																					"nodeType": "Return",
																					"src": "13646:13:0"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 528,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "13726:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13726:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "RevertStatement",
												"src": "13719:38:0"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "12444:66:0",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12524:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12551:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "12543:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12542:17:0"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "12582:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12581:9:0"
									},
									"scope": 1622,
									"src": "12515:1249:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "13957:262:0",
										"statements": [
											{
												"expression": {
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 541,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "13967:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1673_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13977:4:0",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1666,
														"src": "13967:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 548,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "14000:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13992:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 546,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "13992:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13992:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13984:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 544,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13984:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13984:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13967:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "13967:41:0"
											},
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 553,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "14018:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1673_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14028:14:0",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1668,
														"src": "14018:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 558,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "14052:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 559,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "14062:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14052:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14045:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 556,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "14045:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14045:41:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "14018:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "14018:68:0"
											},
											{
												"expression": {
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 564,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "14096:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1673_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14106:6:0",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1670,
														"src": "14096:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 567,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "14115:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 568,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "14124:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14115:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14143:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14115:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14096:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "14096:48:0"
											},
											{
												"expression": {
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 574,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "14154:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1673_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14164:9:0",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1672,
														"src": "14154:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 579,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "14183:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 580,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "14193:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14183:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14176:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 577,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "14176:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14176:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "14154:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "14154:58:0"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "13770:83:0",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "13867:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "13894:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "13886:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13885:16:0"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "13946:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "13924:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1673_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 537,
														"name": "TokenOwnership",
														"nameLocations": [
															"13924:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1673,
														"src": "13924:14:0"
													},
													"referencedDeclaration": 1673,
													"src": "13924:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1673_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13923:33:0"
									},
									"scope": 1622,
									"src": "13858:361:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "14393:347:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14412:322:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14522:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14535:5:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "14542:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14531:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "14531:28:0"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "14522:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14651:73:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14664:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "14678:23:0"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "14703:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14703:11:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "14674:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14674:41:0"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "14717:5:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "14671:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14671:52:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14661:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "14661:63:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14651:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "14542:16:0",
														"valueSize": 1
													},
													{
														"declaration": 51,
														"isOffset": false,
														"isSlot": false,
														"src": "14678:23:0",
														"valueSize": 1
													},
													{
														"declaration": 591,
														"isOffset": false,
														"isSlot": false,
														"src": "14717:5:0",
														"valueSize": 1
													},
													{
														"declaration": 589,
														"isOffset": false,
														"isSlot": false,
														"src": "14522:5:0",
														"valueSize": 1
													},
													{
														"declaration": 589,
														"isOffset": false,
														"isSlot": false,
														"src": "14535:5:0",
														"valueSize": 1
													},
													{
														"declaration": 589,
														"isOffset": false,
														"isSlot": false,
														"src": "14664:5:0",
														"valueSize": 1
													},
													{
														"declaration": 594,
														"isOffset": false,
														"isSlot": false,
														"src": "14651:6:0",
														"valueSize": 1
													}
												],
												"id": 596,
												"nodeType": "InlineAssembly",
												"src": "14403:331:0"
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "14225:67:0",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "14306:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14333:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "14325:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "14348:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "14340:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14324:30:0"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14385:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "14377:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14376:16:0"
									},
									"scope": 1622,
									"src": "14297:443:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "14923:232:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15007:142:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15083:56:0",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "15097:24:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "15126:8:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15136:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15123:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15123:15:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15093:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "15093:46:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15083:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 59,
														"isOffset": false,
														"isSlot": false,
														"src": "15097:24:0",
														"valueSize": 1
													},
													{
														"declaration": 601,
														"isOffset": false,
														"isSlot": false,
														"src": "15126:8:0",
														"valueSize": 1
													},
													{
														"declaration": 604,
														"isOffset": false,
														"isSlot": false,
														"src": "15083:6:0",
														"valueSize": 1
													}
												],
												"id": 606,
												"nodeType": "InlineAssembly",
												"src": "14998:151:0"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "14746:86:0",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "14846:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "14875:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "14867:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14866:18:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14915:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "14907:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14906:16:0"
									},
									"scope": 1622,
									"src": "14837:318:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1770
									],
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "15890:320:0",
										"statements": [
											{
												"assignments": [
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15908:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 652,
														"src": "15900:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 617,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15900:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 622,
												"initialValue": {
													"arguments": [
														{
															"id": 620,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "15924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "15916:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15916:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15900:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 623,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "15947:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15947:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 625,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "15970:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15947:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 638,
												"nodeType": "IfStatement",
												"src": "15943:172:0",
												"trueBody": {
													"condition": {
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15993:45:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 628,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "16011:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 629,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "16018:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16018:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 627,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "15994:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15994:44:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 637,
													"nodeType": "IfStatement",
													"src": "15989:126:0",
													"trueBody": {
														"id": 636,
														"nodeType": "Block",
														"src": "16040:75:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 633,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "16065:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16065:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 635,
																"nodeType": "RevertStatement",
																"src": "16058:42:0"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 639,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "16125:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 641,
															"indexExpression": {
																"id": 640,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "16141:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16125:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 642,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16150:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "16125:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "16158:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16125:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "16125:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 647,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "16184:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "16191:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "16195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1705,
														"src": "16175:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16175:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "EmitStatement",
												"src": "16170:33:0"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "15348:459:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15821:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 615,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15881:8:0"
									},
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15837:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "15829:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15849:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "15841:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15828:29:0"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15890:0:0"
									},
									"scope": 1622,
									"src": "15812:398:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1786
									],
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "16445:129:0",
										"statements": [
											{
												"condition": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16459:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 663,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "16468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 662,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "16460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16460:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "16455:64:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 666,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "16485:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16485:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 668,
													"nodeType": "RevertStatement",
													"src": "16478:41:0"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 670,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "16537:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 672,
														"indexExpression": {
															"id": 671,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "16553:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16537:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16562:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "16537:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 661,
												"id": 674,
												"nodeType": "Return",
												"src": "16530:37:0"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "16216:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16369:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 658,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16418:8:0"
									},
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "16381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16380:17:0"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "16436:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16435:9:0"
									},
									"scope": 1622,
									"src": "16360:214:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1778
									],
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "16985:147:0",
										"statements": [
											{
												"expression": {
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 685,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "16995:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 689,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 686,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "17014:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17014:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16995:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 690,
														"indexExpression": {
															"id": 688,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "17035:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16995:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 691,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "17047:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16995:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "16995:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 695,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "17085:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17085:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "17106:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "17116:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 694,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "17070:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17070:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "EmitStatement",
												"src": "17065:60:0"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "16580:316:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "16910:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 683,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16976:8:0"
									},
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16936:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "16928:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16951:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "16946:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16946:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16927:33:0"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16985:0:0"
									},
									"scope": 1622,
									"src": "16901:231:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1796
									],
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "17385:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 713,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "17402:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 715,
														"indexExpression": {
															"id": 714,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "17421:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17402:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 717,
													"indexExpression": {
														"id": 716,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "17428:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17402:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 712,
												"id": 718,
												"nodeType": "Return",
												"src": "17395:42:0"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "17138:139:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17291:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 709,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17361:8:0"
									},
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17316:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "17308:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17331:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "17323:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17307:33:0"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "17379:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17379:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17378:6:0"
									},
									"scope": 1622,
									"src": "17282:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "17764:206:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 728,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "17793:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17793:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 730,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "17812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17793:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 732,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "17835:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 733,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "17845:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17835:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "17793:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 736,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "17895:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 738,
																"indexExpression": {
																	"id": 737,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "17913:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17895:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 739,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "17924:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17895:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17943:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17895:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17793:151:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 727,
												"id": 744,
												"nodeType": "Return",
												"src": "17774:170:0"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "17450:238:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "17702:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17718:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "17710:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17709:17:0"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "17758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17757:6:0"
									},
									"scope": 1622,
									"src": "17693:277:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "18232:488:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18251:463:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18361:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "18374:5:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18381:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18370:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "18370:28:0"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "18361:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18511:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "18528:9:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18539:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18524:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "18524:32:0"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "18511:9:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18638:66:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "18654:9:0"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "18665:5:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18651:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18651:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "18676:9:0"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "18687:15:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18673:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18673:30:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18648:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "18648:56:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18638:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "18381:16:0",
														"valueSize": 1
													},
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "18539:16:0",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "18687:15:0",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "18511:9:0",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "18528:9:0",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "18654:9:0",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "18676:9:0",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "18361:5:0",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "18374:5:0",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "18665:5:0",
														"valueSize": 1
													},
													{
														"declaration": 756,
														"isOffset": false,
														"isSlot": false,
														"src": "18638:6:0",
														"valueSize": 1
													}
												],
												"id": 758,
												"nodeType": "InlineAssembly",
												"src": "18242:472:0"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "17976:93:0",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18083:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18125:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "18117:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18158:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "18150:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18181:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "18173:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18107:89:0"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18224:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "18219:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18219:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18218:13:0"
									},
									"scope": 1622,
									"src": "18074:646:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "18985:317:0",
										"statements": [
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19020:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 778,
														"src": "18995:38:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 771,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 770,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"18995:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 23,
																"src": "18995:16:0"
															},
															"referencedDeclaration": 23,
															"src": "18995:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"initialValue": {
													"baseExpression": {
														"id": 773,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "19036:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 775,
													"indexExpression": {
														"id": 774,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "19052:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19036:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18995:65:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19173:123:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19187:41:0",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19210:18:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19187:19:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19241:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19266:19:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19260:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19260:26:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19241:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 768,
														"isOffset": false,
														"isSlot": false,
														"src": "19241:15:0",
														"valueSize": 1
													},
													{
														"declaration": 766,
														"isOffset": false,
														"isSlot": false,
														"src": "19187:19:0",
														"valueSize": 1
													},
													{
														"declaration": 766,
														"isOffset": false,
														"isSlot": false,
														"src": "19266:19:0",
														"valueSize": 1
													},
													{
														"declaration": 772,
														"isOffset": false,
														"isSlot": true,
														"src": "19210:18:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 777,
												"nodeType": "InlineAssembly",
												"src": "19164:132:0"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "18726:97:0",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "18837:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18872:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "18864:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18863:17:0"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "18935:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "18927:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18964:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "18956:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18926:54:0"
									},
									"scope": 1622,
									"src": "18828:474:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1762
									],
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "20030:2637:0",
										"statements": [
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20048:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "20040:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20040:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": {
													"arguments": [
														{
															"id": 793,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "20089:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 792,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "20070:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20070:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20040:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 800,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "20128:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20120:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 798,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20120:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20120:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 796,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20112:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20112:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 803,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "20153:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20112:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "20108:86:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 805,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "20166:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20166:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 807,
													"nodeType": "RevertStatement",
													"src": "20159:35:0"
												}
											},
											{
												"assignments": [
													810,
													812
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "20214:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "20206:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 809,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20206:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 812,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "20243:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "20235:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 811,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20235:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"arguments": [
														{
															"id": 814,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "20289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 813,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "20262:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20262:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20205:92:0"
											},
											{
												"condition": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "20393:69:0",
													"subExpression": {
														"arguments": [
															{
																"id": 818,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "20419:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 819,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "20436:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 820,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "20442:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20442:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 817,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "20394:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20394:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "20389:179:0",
												"trueBody": {
													"condition": {
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "20480:44:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 825,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "20498:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 826,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "20504:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20504:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 824,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "20481:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20481:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 833,
													"nodeType": "IfStatement",
													"src": "20476:92:0",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 830,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "20533:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20533:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 832,
														"nodeType": "RevertStatement",
														"src": "20526:42:0"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 835,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "20583:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20597:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 836,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20589:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20589:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20583:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"nodeType": "IfStatement",
												"src": "20579:52:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 841,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "20608:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20608:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 843,
													"nodeType": "RevertStatement",
													"src": "20601:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 846,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "20664:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "20670:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "20674:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20683:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 845,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "20642:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20642:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "20642:43:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20757:181:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20790:138:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "20891:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20912:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "20884:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20884:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20884:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "20774:15:0"
															},
															"nodeType": "YulIf",
															"src": "20771:157:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 812,
														"isOffset": false,
														"isSlot": false,
														"src": "20774:15:0",
														"valueSize": 1
													},
													{
														"declaration": 810,
														"isOffset": false,
														"isSlot": false,
														"src": "20891:19:0",
														"valueSize": 1
													}
												],
												"id": 852,
												"nodeType": "InlineAssembly",
												"src": "20748:190:0"
											},
											{
												"id": 909,
												"nodeType": "UncheckedBlock",
												"src": "21205:1361:0",
												"statements": [
													{
														"expression": {
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "21298:26:0",
															"subExpression": {
																"baseExpression": {
																	"id": 853,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "21300:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 855,
																"indexExpression": {
																	"id": 854,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "21319:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21300:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 857,
														"nodeType": "ExpressionStatement",
														"src": "21298:26:0"
													},
													{
														"expression": {
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "21366:24:0",
															"subExpression": {
																"baseExpression": {
																	"id": 858,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "21368:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 860,
																"indexExpression": {
																	"id": 859,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "21387:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21368:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 862,
														"nodeType": "ExpressionStatement",
														"src": "21366:24:0"
													},
													{
														"expression": {
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 863,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "21654:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 865,
																"indexExpression": {
																	"id": 864,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "21672:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21654:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 867,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "21719:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 868,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "21739:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 870,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "21782:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 871,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 784,
																					"src": "21788:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 872,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 791,
																					"src": "21792:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 869,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1601,
																				"src": "21767:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21767:45:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21739:73:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 866,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "21683:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21683:143:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21654:172:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 877,
														"nodeType": "ExpressionStatement",
														"src": "21654:172:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 878,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "21943:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 879,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "21965:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21943:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21994:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21943:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 908,
														"nodeType": "IfStatement",
														"src": "21939:617:0",
														"trueBody": {
															"id": 907,
															"nodeType": "Block",
															"src": "21997:559:0",
															"statements": [
																{
																	"assignments": [
																		884
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 884,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22023:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 907,
																			"src": "22015:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 883,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22015:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 888,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 885,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "22037:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22047:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22037:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22015:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 889,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "22168:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 891,
																			"indexExpression": {
																				"id": 890,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 884,
																				"src": "22186:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22168:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22202:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22168:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 906,
																	"nodeType": "IfStatement",
																	"src": "22164:378:0",
																	"trueBody": {
																		"id": 905,
																		"nodeType": "Block",
																		"src": "22205:337:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 894,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 884,
																						"src": "22289:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 895,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 91,
																						"src": "22304:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22289:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 904,
																				"nodeType": "IfStatement",
																				"src": "22285:239:0",
																				"trueBody": {
																					"id": 903,
																					"nodeType": "Block",
																					"src": "22319:205:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 901,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 897,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 101,
																										"src": "22449:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 899,
																									"indexExpression": {
																										"id": 898,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 884,
																										"src": "22467:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "22449:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 900,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 791,
																									"src": "22482:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "22449:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 902,
																							"nodeType": "ExpressionStatement",
																							"src": "22449:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 911,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "22590:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "22596:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "22600:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 910,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1696,
														"src": "22581:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22581:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "EmitStatement",
												"src": "22576:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "22639:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "22645:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "22649:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22658:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 916,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "22618:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22618:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "22618:42:0"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "19495:403:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "19912:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 788,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20021:8:0"
									},
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19942:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "19934:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19964:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "19956:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19984:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "19976:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19924:73:0"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20030:0:0"
									},
									"scope": 1622,
									"src": "19903:2764:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1752
									],
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "22889:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 936,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "22916:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "22922:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 938,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "22926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22935:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 935,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															943,
															981
														],
														"referencedDeclaration": 981,
														"src": "22899:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22899:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "22899:39:0"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "22673:80:0",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "22767:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 933,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22880:8:0"
									},
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22801:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "22793:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22823:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "22815:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22843:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "22835:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22783:73:0"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22889:0:0"
									},
									"scope": 1622,
									"src": "22758:187:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1742
									],
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "23685:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 957,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "23708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "23714:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "23718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 956,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "23695:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23695:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "23695:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 962,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "23740:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23743:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "23740:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23748:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "23740:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23758:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23740:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "23736:180:0",
												"trueBody": {
													"condition": {
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "23777:57:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 968,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "23809:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 969,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "23815:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 970,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "23819:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 971,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "23828:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 967,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "23778:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23778:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 978,
													"nodeType": "IfStatement",
													"src": "23773:143:0",
													"trueBody": {
														"id": 977,
														"nodeType": "Block",
														"src": "23836:80:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 974,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1652,
																		"src": "23861:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23861:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 976,
																"nodeType": "RevertStatement",
																"src": "23854:47:0"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "22951:570:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23535:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 954,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23676:8:0"
									},
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23569:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23561:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23591:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23583:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23611:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23603:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "23641:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23628:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23628:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23551:101:0"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23685:0:0"
									},
									"scope": 1622,
									"src": "23526:396:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "24718:2:0",
										"statements": []
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "23928:633:0",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "24575:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24614:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "24606:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24636:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "24628:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "24656:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "24648:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "24686:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "24678:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24596:104:0"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24718:0:0"
									},
									"scope": 1622,
									"src": "24566:154:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "25518:2:0",
										"statements": []
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "24726:636:0",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "25376:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25414:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "25406:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25436:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "25428:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25456:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "25448:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25486:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "25478:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25396:104:0"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25518:0:0"
									},
									"scope": 1622,
									"src": "25367:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "26112:533:0",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1042,
															"nodeType": "Block",
															"src": "26261:96:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1034,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "26282:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1036,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1012,
																							"src": "26317:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1035,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "26292:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$17_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1037,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26292:28:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$17",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "26321:16:0",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 16,
																				"src": "26292:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26338:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "26292:54:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "26282:64:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1020,
																	"id": 1041,
																	"nodeType": "Return",
																	"src": "26275:71:0"
																}
															]
														},
														"errorName": "",
														"id": 1043,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1033,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1032,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "26244:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1043,
																	"src": "26237:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1031,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "26237:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26223:37:0"
														},
														"src": "26215:142:0"
													},
													{
														"block": {
															"id": 1058,
															"nodeType": "Block",
															"src": "26386:253:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1047,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "26404:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26411:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "26404:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26421:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "26404:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1056,
																		"nodeType": "Block",
																		"src": "26510:119:0",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "26537:78:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "26570:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "26574:6:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "26566:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26566:15:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "26589:6:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "26583:5:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26583:13:0"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "26559:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26559:38:0"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "26559:38:0"
																						}
																					]
																				},
																				"evmVersion": "paris",
																				"externalReferences": [
																					{
																						"declaration": 1045,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "26574:6:0",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1045,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "26589:6:0",
																						"valueSize": 1
																					}
																				],
																				"id": 1055,
																				"nodeType": "InlineAssembly",
																				"src": "26528:87:0"
																			}
																		]
																	},
																	"id": 1057,
																	"nodeType": "IfStatement",
																	"src": "26400:229:0",
																	"trueBody": {
																		"id": 1054,
																		"nodeType": "Block",
																		"src": "26424:80:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1051,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1652,
																						"src": "26449:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1052,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26449:40:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1053,
																				"nodeType": "RevertStatement",
																				"src": "26442:47:0"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1059,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1046,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1045,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "26378:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1059,
																	"src": "26365:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1044,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "26365:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26364:21:0"
														},
														"src": "26358:281:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1025,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "26172:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26172:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "26193:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "26199:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1029,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "26208:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1022,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "26151:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1021,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "26126:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$17_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26126:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$17",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26155:16:0",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "26126:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26126:88:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1060,
												"nodeType": "TryStatement",
												"src": "26122:517:0"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "25526:417:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "25957:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26005:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "25997:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26027:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "26019:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26047:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "26039:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26077:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "26064:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1015,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26064:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25987:101:0"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "26106:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26106:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26105:6:0"
									},
									"scope": 1622,
									"src": "25948:697:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "27153:2840:0",
										"statements": [
											{
												"assignments": [
													1071
												],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "27171:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1157,
														"src": "27163:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1070,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"id": 1072,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "27186:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27163:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1074,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "27213:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27225:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27213:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1080,
												"nodeType": "IfStatement",
												"src": "27209:44:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1077,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "27235:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27235:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1079,
													"nodeType": "RevertStatement",
													"src": "27228:25:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27294:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27286:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1082,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27286:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27286:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "27298:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "27302:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1088,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "27316:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1081,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "27264:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27264:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "27264:61:0"
											},
											{
												"id": 1146,
												"nodeType": "UncheckedBlock",
												"src": "27508:2409:0",
												"statements": [
													{
														"expression": {
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1091,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "27728:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1093,
																"indexExpression": {
																	"id": 1092,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "27747:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "27728:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1094,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "27754:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1097,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1095,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27767:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1096,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 34,
																							"src": "27772:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "27767:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1098,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27766:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27797:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27766:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1101,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "27765:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27754:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27728:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1104,
														"nodeType": "ExpressionStatement",
														"src": "27728:71:0"
													},
													{
														"expression": {
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1105,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "28035:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1107,
																"indexExpression": {
																	"id": 1106,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "28053:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28035:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1109,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "28105:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1111,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1067,
																					"src": "28146:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1110,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 608,
																				"src": "28125:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28125:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1116,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28181:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "28173:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1114,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "28173:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28173:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1118,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1065,
																					"src": "28185:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1119,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28189:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1113,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1601,
																				"src": "28158:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28158:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28125:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1108,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "28069:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28069:136:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28035:170:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1124,
														"nodeType": "ExpressionStatement",
														"src": "28035:170:0"
													},
													{
														"assignments": [
															1126
														],
														"declarations": [
															{
																"constant": false,
																"id": 1126,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "28228:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 1146,
																"src": "28220:16:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1125,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28220:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1127,
														"nodeType": "VariableDeclarationStatement",
														"src": "28220:16:0"
													},
													{
														"assignments": [
															1129
														],
														"declarations": [
															{
																"constant": false,
																"id": 1129,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "28258:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1146,
																"src": "28250:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28250:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1133,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "28264:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1131,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "28279:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28264:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28250:37:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "28657:1157:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "28772:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "28788:2:0"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nodeType": "YulIdentifier",
																				"src": "28792:16:0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "28784:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28784:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "toMasked",
																			"nodeType": "YulIdentifier",
																			"src": "28772:8:0"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28898:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28958:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nodeType": "YulIdentifier",
																				"src": "29016:25:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29077:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nodeType": "YulIdentifier",
																				"src": "29117:8:0"
																			},
																			{
																				"name": "startTokenId",
																				"nodeType": "YulIdentifier",
																				"src": "29156:12:0"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nodeType": "YulIdentifier",
																			"src": "28872:4:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28872:328:0"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "28872:328:0"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "29633:167:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29728:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29731:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "29734:25:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29761:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "29764:8:0"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "29774:7:0"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "29723:4:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29723:59:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "29723:59:0"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "29551:7:0"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "29560:3:0"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "29548:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29548:16:0"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "29541:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29541:24:0"
																	},
																	"nodeType": "YulForLoop",
																	"post": {
																		"nodeType": "YulBlock",
																		"src": "29566:66:0",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "29588:26:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "29603:7:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29612:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "29599:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29599:15:0"
																				},
																				"variableNames": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "29588:7:0"
																					}
																				]
																			}
																		]
																	},
																	"pre": {
																		"nodeType": "YulBlock",
																		"src": "29465:75:0",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "29487:35:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "startTokenId",
																							"nodeType": "YulIdentifier",
																							"src": "29506:12:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29520:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "29502:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29502:20:0"
																				},
																				"variables": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulTypedName",
																						"src": "29491:7:0",
																						"type": ""
																					}
																				]
																			}
																		]
																	},
																	"src": "29461:339:0"
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 83,
																"isOffset": false,
																"isSlot": false,
																"src": "28792:16:0",
																"valueSize": 1
															},
															{
																"declaration": 89,
																"isOffset": false,
																"isSlot": false,
																"src": "29016:25:0",
																"valueSize": 1
															},
															{
																"declaration": 89,
																"isOffset": false,
																"isSlot": false,
																"src": "29734:25:0",
																"valueSize": 1
															},
															{
																"declaration": 1129,
																"isOffset": false,
																"isSlot": false,
																"src": "29560:3:0",
																"valueSize": 1
															},
															{
																"declaration": 1071,
																"isOffset": false,
																"isSlot": false,
																"src": "29156:12:0",
																"valueSize": 1
															},
															{
																"declaration": 1071,
																"isOffset": false,
																"isSlot": false,
																"src": "29506:12:0",
																"valueSize": 1
															},
															{
																"declaration": 1065,
																"isOffset": false,
																"isSlot": false,
																"src": "28788:2:0",
																"valueSize": 1
															},
															{
																"declaration": 1126,
																"isOffset": false,
																"isSlot": false,
																"src": "28772:8:0",
																"valueSize": 1
															},
															{
																"declaration": 1126,
																"isOffset": false,
																"isSlot": false,
																"src": "29117:8:0",
																"valueSize": 1
															},
															{
																"declaration": 1126,
																"isOffset": false,
																"isSlot": false,
																"src": "29764:8:0",
																"valueSize": 1
															}
														],
														"id": 1134,
														"nodeType": "InlineAssembly",
														"src": "28648:1166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1135,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "29831:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29843:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29831:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1141,
														"nodeType": "IfStatement",
														"src": "29827:45:0",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1138,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "29853:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29853:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1140,
															"nodeType": "RevertStatement",
															"src": "29846:26:0"
														}
													},
													{
														"expression": {
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1142,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "29887:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1143,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "29903:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29887:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1145,
														"nodeType": "ExpressionStatement",
														"src": "29887:19:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29955:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29947:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1148,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29947:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29947:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1152,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "29959:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1153,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "29963:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1154,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "29977:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1147,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "29926:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29926:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "29926:60:0"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "26836:250:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "27100:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27114:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "27106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27126:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "27118:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27105:30:0"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27153:0:0"
									},
									"scope": 1622,
									"src": "27091:2902:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "30902:1374:0",
										"statements": [
											{
												"assignments": [
													1167
												],
												"declarations": [
													{
														"constant": false,
														"id": 1167,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "30920:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1269,
														"src": "30912:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1166,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30912:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1169,
												"initialValue": {
													"id": 1168,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "30935:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30912:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1170,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "30962:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30976:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1171,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "30968:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30968:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30962:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1179,
												"nodeType": "IfStatement",
												"src": "30958:48:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1176,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "30987:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30987:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1178,
													"nodeType": "RevertStatement",
													"src": "30980:26:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1180,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "31020:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31032:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31020:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "31016:44:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1183,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "31042:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31042:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1185,
													"nodeType": "RevertStatement",
													"src": "31035:25:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1187,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "31074:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1188,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "31085:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31074:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1193,
												"nodeType": "IfStatement",
												"src": "31070:89:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1190,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "31126:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31126:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1192,
													"nodeType": "RevertStatement",
													"src": "31119:40:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31200:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31192:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1195,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31192:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31192:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "31204:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "31208:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1201,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "31222:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1194,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "31170:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31170:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "31170:61:0"
											},
											{
												"id": 1258,
												"nodeType": "UncheckedBlock",
												"src": "31340:860:0",
												"statements": [
													{
														"expression": {
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1204,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "31560:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1206,
																"indexExpression": {
																	"id": 1205,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "31579:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31560:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1207,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "31586:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1210,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1208,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31599:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1209,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 34,
																							"src": "31604:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "31599:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1211,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "31598:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31629:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "31598:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1214,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31597:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31586:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31560:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1217,
														"nodeType": "ExpressionStatement",
														"src": "31560:71:0"
													},
													{
														"expression": {
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1218,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "31867:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1220,
																"indexExpression": {
																	"id": 1219,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "31885:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31867:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1222,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1161,
																		"src": "31937:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1224,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1163,
																					"src": "31978:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1223,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 608,
																				"src": "31957:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31957:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1229,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32013:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1228,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32005:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1227,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32005:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1230,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32005:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1231,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "32017:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1232,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32021:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1226,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1601,
																				"src": "31990:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31990:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "31957:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1221,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "31901:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31901:136:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31867:170:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1237,
														"nodeType": "ExpressionStatement",
														"src": "31867:170:0"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1239,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "32077:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1240,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "32091:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1241,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1163,
																			"src": "32106:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32091:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32091:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32128:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32120:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1245,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32120:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32120:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1249,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "32132:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1238,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "32057:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32057:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1251,
														"nodeType": "EmitStatement",
														"src": "32052:83:0"
													},
													{
														"expression": {
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1252,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "32150:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1253,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "32166:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1254,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "32181:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32166:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32150:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1257,
														"nodeType": "ExpressionStatement",
														"src": "32150:39:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32238:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32230:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1260,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32230:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32230:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1264,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "32242:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1265,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "32246:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1266,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "32260:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1259,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "32209:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32209:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "32209:60:0"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "29999:829:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "30842:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30863:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "30855:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30855:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "30875:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "30867:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30854:30:0"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30902:0:0"
									},
									"scope": 1622,
									"src": "30833:1443:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "32791:553:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1281,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "32807:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1282,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "32811:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1280,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "32801:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32801:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "32801:19:0"
											},
											{
												"id": 1330,
												"nodeType": "UncheckedBlock",
												"src": "32831:507:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1285,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "32859:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "32862:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "32859:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32867:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "32859:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32877:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32859:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1329,
														"nodeType": "IfStatement",
														"src": "32855:473:0",
														"trueBody": {
															"id": 1328,
															"nodeType": "Block",
															"src": "32880:448:0",
															"statements": [
																{
																	"assignments": [
																		1291
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1291,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "32906:3:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1328,
																			"src": "32898:11:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1290,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "32898:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1293,
																	"initialValue": {
																		"id": 1292,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "32912:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "32898:27:0"
																},
																{
																	"assignments": [
																		1295
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1295,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "32951:5:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1328,
																			"src": "32943:13:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1294,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "32943:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1299,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1296,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "32959:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1297,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "32965:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32959:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "32943:30:0"
																},
																{
																	"body": {
																		"id": 1316,
																		"nodeType": "Block",
																		"src": "32994:205:0",
																		"statements": [
																			{
																				"condition": {
																					"id": 1310,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33020:63:0",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1303,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33060:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1302,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33052:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1301,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33052:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1304,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33052:10:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1305,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1273,
																								"src": "33064:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1307,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33068:7:0",
																								"subExpression": {
																									"id": 1306,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1295,
																									"src": "33068:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1308,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1277,
																								"src": "33077:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1300,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1062,
																							"src": "33021:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1309,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33021:62:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1315,
																				"nodeType": "IfStatement",
																				"src": "33016:165:0",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "33085:96:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1311,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1652,
																									"src": "33118:38:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33118:40:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "33111:47:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1317,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "33207:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1318,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "33215:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33207:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1320,
																	"nodeType": "DoWhileStatement",
																	"src": "32991:229:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1321,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 91,
																			"src": "33283:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1322,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "33300:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33283:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1327,
																	"nodeType": "IfStatement",
																	"src": "33279:34:0",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1324,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "33305:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33305:8:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1326,
																		"nodeType": "ExpressionStatement",
																		"src": "33305:8:0"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "32282:388:0",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "32684:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32711:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "32703:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "32723:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "32762:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "32749:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32749:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32693:80:0"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32791:0:0"
									},
									"scope": 1622,
									"src": "32675:669:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "33489:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "33509:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1342,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "33513:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33523:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1340,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1332,
															1347
														],
														"referencedDeclaration": 1332,
														"src": "33499:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33499:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "33499:27:0"
											}
										]
									},
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "33350:68:0",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33432:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33450:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "33442:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "33454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33441:30:0"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33489:0:0"
									},
									"scope": 1622,
									"src": "33423:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "33840:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1354,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "33856:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33865:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1353,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1359,
															1511
														],
														"referencedDeclaration": 1511,
														"src": "33850:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33850:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "33850:21:0"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "33724:62:0",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "33800:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33814:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "33806:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33805:17:0"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33840:0:0"
									},
									"scope": 1622,
									"src": "33791:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "34164:2946:0",
										"statements": [
											{
												"assignments": [
													1368
												],
												"declarations": [
													{
														"constant": false,
														"id": 1368,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "34182:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "34174:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34174:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1372,
												"initialValue": {
													"arguments": [
														{
															"id": 1370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "34223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1369,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "34204:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34204:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34174:57:0"
											},
											{
												"assignments": [
													1374
												],
												"declarations": [
													{
														"constant": false,
														"id": 1374,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "34250:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "34242:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34242:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1382,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1379,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "34273:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34265:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1377,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "34265:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34265:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34257:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1375,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34257:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34257:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34242:52:0"
											},
											{
												"assignments": [
													1384,
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "34314:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "34306:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "34343:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "34335:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1385,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34335:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"arguments": [
														{
															"id": 1388,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "34389:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1387,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "34362:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34362:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34305:92:0"
											},
											{
												"condition": {
													"id": 1391,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1364,
													"src": "34412:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "34408:312:0",
												"trueBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "34427:293:0",
													"statements": [
														{
															"condition": {
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "34530:69:0",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1393,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1386,
																			"src": "34556:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1394,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1374,
																			"src": "34573:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1395,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1611,
																				"src": "34579:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34579:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1392,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "34531:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34531:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1409,
															"nodeType": "IfStatement",
															"src": "34526:183:0",
															"trueBody": {
																"condition": {
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "34621:44:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1400,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1374,
																				"src": "34639:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1401,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1611,
																					"src": "34645:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "34645:19:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1399,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 720,
																			"src": "34622:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34622:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1408,
																"nodeType": "IfStatement",
																"src": "34617:92:0",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1405,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1646,
																			"src": "34674:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34674:35:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1407,
																	"nodeType": "RevertStatement",
																	"src": "34667:42:0"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1413,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "34752:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34766:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34758:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1414,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34758:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34758:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1418,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "34770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34779:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1412,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "34730:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34730:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "34730:51:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "34853:181:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34886:138:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "34987:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35008:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "34980:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34980:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34980:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "34870:15:0"
															},
															"nodeType": "YulIf",
															"src": "34867:157:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1386,
														"isOffset": false,
														"isSlot": false,
														"src": "34870:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1384,
														"isOffset": false,
														"isSlot": false,
														"src": "34987:19:0",
														"valueSize": 1
													}
												],
												"id": 1422,
												"nodeType": "InlineAssembly",
												"src": "34844:190:0"
											},
											{
												"id": 1486,
												"nodeType": "UncheckedBlock",
												"src": "35301:1545:0",
												"statements": [
													{
														"expression": {
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1423,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "35613:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1425,
																"indexExpression": {
																	"id": 1424,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "35632:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "35613:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35642:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1427,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 37,
																				"src": "35647:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "35642:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1429,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "35641:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35672:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "35641:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35613:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1433,
														"nodeType": "ExpressionStatement",
														"src": "35613:60:0"
													},
													{
														"expression": {
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1434,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "35904:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1436,
																"indexExpression": {
																	"id": 1435,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "35922:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "35904:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1438,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1374,
																		"src": "35969:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1441,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1439,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 56,
																						"src": "35992:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1440,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 64,
																						"src": "36010:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "35992:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1442,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "35991:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1444,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1374,
																					"src": "36054:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1447,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36068:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "36060:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1445,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "36060:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1448,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36060:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1449,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1368,
																					"src": "36072:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1443,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1601,
																				"src": "36039:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36039:53:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "35991:101:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1437,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "35933:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35933:173:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35904:202:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1454,
														"nodeType": "ExpressionStatement",
														"src": "35904:202:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1455,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "36223:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1456,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "36245:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36223:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36274:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "36223:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1485,
														"nodeType": "IfStatement",
														"src": "36219:617:0",
														"trueBody": {
															"id": 1484,
															"nodeType": "Block",
															"src": "36277:559:0",
															"statements": [
																{
																	"assignments": [
																		1461
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1461,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "36303:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1484,
																			"src": "36295:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1460,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "36295:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1465,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1462,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "36317:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36327:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "36317:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "36295:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1466,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "36448:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1468,
																			"indexExpression": {
																				"id": 1467,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1461,
																				"src": "36466:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "36448:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36482:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "36448:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1483,
																	"nodeType": "IfStatement",
																	"src": "36444:378:0",
																	"trueBody": {
																		"id": 1482,
																		"nodeType": "Block",
																		"src": "36485:337:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1473,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1471,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1461,
																						"src": "36569:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1472,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 91,
																						"src": "36584:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "36569:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1481,
																				"nodeType": "IfStatement",
																				"src": "36565:239:0",
																				"trueBody": {
																					"id": 1480,
																					"nodeType": "Block",
																					"src": "36599:205:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1478,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1474,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 101,
																										"src": "36729:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1476,
																									"indexExpression": {
																										"id": 1475,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1461,
																										"src": "36747:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "36729:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1477,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1368,
																									"src": "36762:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "36729:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1479,
																							"nodeType": "ExpressionStatement",
																							"src": "36729:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1488,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "36870:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36884:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36876:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36876:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36876:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "36888:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1487,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1696,
														"src": "36861:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36861:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "EmitStatement",
												"src": "36856:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1497,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "36927:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36941:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36933:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36933:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36933:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1502,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "36945:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36954:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1496,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "36906:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36906:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "36906:50:0"
											},
											{
												"id": 1509,
												"nodeType": "UncheckedBlock",
												"src": "37055:49:0",
												"statements": [
													{
														"expression": {
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "37079:14:0",
															"subExpression": {
																"id": 1506,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "37079:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1508,
														"nodeType": "ExpressionStatement",
														"src": "37079:14:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "33884:206:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34104:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34118:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "34110:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "34132:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "34127:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34109:37:0"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34164:0:0"
									},
									"scope": 1622,
									"src": "34095:3015:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "37468:447:0",
										"statements": [
											{
												"assignments": [
													1520
												],
												"declarations": [
													{
														"constant": false,
														"id": 1520,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "37486:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1554,
														"src": "37478:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37478:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1524,
												"initialValue": {
													"baseExpression": {
														"id": 1521,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "37495:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1523,
													"indexExpression": {
														"id": 1522,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "37513:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37495:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37478:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1525,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "37533:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "37543:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "37533:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1531,
												"nodeType": "IfStatement",
												"src": "37529:61:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1528,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "37553:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37553:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1530,
													"nodeType": "RevertStatement",
													"src": "37546:44:0"
												}
											},
											{
												"assignments": [
													1533
												],
												"declarations": [
													{
														"constant": false,
														"id": 1533,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "37608:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1554,
														"src": "37600:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1532,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37600:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1534,
												"nodeType": "VariableDeclarationStatement",
												"src": "37600:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "37712:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "37726:28:0",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "37745:9:0"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "37726:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1516,
														"isOffset": false,
														"isSlot": false,
														"src": "37745:9:0",
														"valueSize": 1
													},
													{
														"declaration": 1533,
														"isOffset": false,
														"isSlot": false,
														"src": "37726:15:0",
														"valueSize": 1
													}
												],
												"id": 1535,
												"nodeType": "InlineAssembly",
												"src": "37703:61:0"
											},
											{
												"expression": {
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1536,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "37773:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1537,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1520,
																		"src": "37783:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1538,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "37792:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37783:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1540,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "37782:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1541,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1533,
																		"src": "37827:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1542,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "37846:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37827:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1544,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "37826:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "37782:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37773:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "37773:92:0"
											},
											{
												"expression": {
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1548,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "37875:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1550,
														"indexExpression": {
															"id": 1549,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "37893:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37875:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1551,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "37902:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37875:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "37875:33:0"
											}
										]
									},
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "37304:84:0",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "37402:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "37426:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "37418:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37418:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "37440:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "37433:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1515,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "37433:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37417:33:0"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37468:0:0"
									},
									"scope": 1622,
									"src": "37393:522:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "38616:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "37921:549:0",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "38484:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38512:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "38504:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38534:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "38526:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "38553:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "38546:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1561,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38546:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38494:82:0"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "38608:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1564,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38608:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38607:8:0"
									},
									"scope": 1622,
									"src": "38475:143:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "38904:164:0",
										"statements": [
											{
												"assignments": [
													1581
												],
												"declarations": [
													{
														"constant": false,
														"id": 1581,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "38921:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "38914:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1580,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "38914:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1588,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1584,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "38940:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1585,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "38963:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38940:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "38933:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1582,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "38933:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38933:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38914:68:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1592,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "39018:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1593,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1573,
																		"src": "39024:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1594,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "39028:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1591,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "39007:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39007:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "38999:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1589,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "38999:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38999:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1597,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "39043:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38999:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1579,
												"id": 1599,
												"nodeType": "Return",
												"src": "38992:69:0"
											}
										]
									},
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "38624:135:0",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "38773:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38805:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "38797:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38827:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "38819:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "38847:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "38839:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38787:85:0"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "38895:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38894:9:0"
									},
									"scope": 1622,
									"src": "38764:304:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "39506:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1607,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "39523:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "39527:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "39523:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1606,
												"id": 1609,
												"nodeType": "Return",
												"src": "39516:17:0"
											}
										]
									},
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "39259:173:0",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "39446:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39463:2:0"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "39497:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39496:9:0"
									},
									"scope": 1622,
									"src": "39437:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "39721:1624:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "39740:1599:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "40104:31:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "40123:4:0",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "40117:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "40117:11:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40130:4:0",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "40113:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "40113:22:0"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "40108:1:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40214:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "40220:1:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "40207:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "40207:15:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40207:15:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "40279:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "40290:1:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40293:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "40286:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "40286:12:0"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "40279:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "40368:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40373:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "40361:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "40361:14:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40361:14:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "40463:14:0",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "40474:3:0"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "40467:3:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "40721:388:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "40739:18:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "40750:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "40755:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "40746:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "40746:11:0"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "40739:3:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "40900:3:0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "40909:2:0",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "40917:4:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "40923:2:0",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "40913:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "40913:13:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "40905:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "40905:22:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "40892:7:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "40892:36:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "40892:36:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "40997:21:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41009:4:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41015:2:0",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "41005:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41005:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "40997:4:0"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "41086:9:0",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "41088:5:0"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41080:4:0"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "41073:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41073:12:0"
																		},
																		"nodeType": "YulIf",
																		"src": "41070:25:0"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "40716:1:0",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "40718:2:0",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "40694:21:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "40696:17:0",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "40708:5:0"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "40700:4:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "40690:419:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41123:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "41141:3:0"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41146:3:0"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41137:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "41137:13:0"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "41127:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "41243:21:0",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41254:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41259:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41250:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "41250:14:0"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "41243:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41317:3:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "41322:6:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41310:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "41310:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41310:19:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": false,
														"src": "40279:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": false,
														"src": "40368:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": false,
														"src": "40474:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": false,
														"src": "40739:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": false,
														"src": "40750:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": false,
														"src": "40900:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": false,
														"src": "41146:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": false,
														"src": "41243:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": false,
														"src": "41254:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": false,
														"src": "41317:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1614,
														"isOffset": false,
														"isSlot": false,
														"src": "40708:5:0",
														"valueSize": 1
													}
												],
												"id": 1619,
												"nodeType": "InlineAssembly",
												"src": "39731:1608:0"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "39546:86:0",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "39646:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39664:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "39656:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39655:15:0"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "39716:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "39702:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39702:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39701:19:0"
									},
									"scope": 1622,
									"src": "39637:1708:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1623,
							"src": "895:40452:0",
							"usedErrors": [
								1628,
								1631,
								1634,
								1637,
								1640,
								1643,
								1646,
								1649,
								1652,
								1655,
								1658,
								1661,
								1664
							]
						}
					],
					"src": "84:41264:0"
				},
				"id": 0
			},
			".deps/npm/erc721a/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": ".deps/npm/erc721a/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							1828
						]
					},
					"id": 1829,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1624,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1625,
								"nodeType": "StructuredDocumentation",
								"src": "109:37:1",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 1828,
							"linearizedBaseContracts": [
								1828
							],
							"name": "IERC721A",
							"nameLocation": "157:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "172:76:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1628,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "259:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:1"
									},
									"src": "253:42:1"
								},
								{
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "301:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1631,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "356:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:1"
									},
									"src": "350:41:1"
								},
								{
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "397:65:1",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1634,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "473:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:1"
									},
									"src": "467:35:1"
								},
								{
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "508:51:1",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1637,
									"name": "MintToZeroAddress",
									"nameLocation": "570:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "564:26:1"
								},
								{
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "596:72:1",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1640,
									"name": "MintZeroQuantity",
									"nameLocation": "679:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:1"
									},
									"src": "673:25:1"
								},
								{
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "704:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1643,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "759:29:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:1"
									},
									"src": "753:38:1"
								},
								{
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "797:76:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1646,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "884:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:1"
									},
									"src": "878:42:1"
								},
								{
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "926:53:1",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1649,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "990:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:1"
									},
									"src": "984:35:1"
								},
								{
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "1025:116:1",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1652,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1152:38:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:1"
									},
									"src": "1146:47:1"
								},
								{
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "1199:55:1",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1655,
									"name": "TransferToZeroAddress",
									"nameLocation": "1265:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:1"
									},
									"src": "1259:30:1"
								},
								{
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "1295:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1658,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1350:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:1"
									},
									"src": "1344:36:1"
								},
								{
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "1386:79:1",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1661,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1476:31:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:1"
									},
									"src": "1470:40:1"
								},
								{
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "1516:83:1",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1664,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1610:35:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:1"
									},
									"src": "1604:44:1"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1673,
									"members": [
										{
											"constant": false,
											"id": 1666,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1912:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 1673,
											"src": "1904:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1665,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1904:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1668,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2017:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 1673,
											"src": "2010:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1667,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2010:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1670,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2092:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 1673,
											"src": "2087:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1669,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2087:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1672,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2203:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 1673,
											"src": "2196:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1671,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2196:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1842:14:1",
									"nodeType": "StructDefinition",
									"scope": 1828,
									"src": "1835:384:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "2410:192:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 1679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2616:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2627:2:1"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "2653:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:9:1"
									},
									"scope": 1828,
									"src": "2607:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "2849:341:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3204:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3229:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "3222:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1681,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3222:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:20:1"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "3265:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1684,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3265:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:6:1"
									},
									"scope": 1828,
									"src": "3195:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "3458:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1696,
									"name": "Transfer",
									"nameLocation": "3557:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3582:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "3566:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "3588:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3624:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "3608:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3565:67:1"
									},
									"src": "3551:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "3639:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1705,
									"name": "Approval",
									"nameLocation": "3744:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3769:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "3753:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3792:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "3776:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3818:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "3802:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:74:1"
									},
									"src": "3738:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "3833:124:1",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1714,
									"name": "ApprovalForAll",
									"nameLocation": "3968:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3999:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "3983:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4022:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "4006:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4037:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4032:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:64:1"
									},
									"src": "3962:85:1"
								},
								{
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "4053:74:1",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 1722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4141:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4159:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4151:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4150:15:1"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4197:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4189:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:17:1"
									},
									"scope": 1828,
									"src": "4132:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "4212:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4357:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4373:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "4365:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:17:1"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4413:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "4405:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4404:15:1"
									},
									"scope": 1828,
									"src": "4348:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "4426:711:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5151:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5185:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "5177:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5207:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "5199:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5227:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "5219:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5259:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "5244:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5244:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5167:102:1"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5286:0:1"
									},
									"scope": 1828,
									"src": "5142:145:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "5293:80:1",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5387:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "5413:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5413:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "5435:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "5455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5403:73:1"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:0:1"
									},
									"scope": 1828,
									"src": "5378:116:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "5500:512:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6026:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6056:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "6048:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6048:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6078:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "6070:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6098:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "6090:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6090:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:73:1"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6128:0:1"
									},
									"scope": 1828,
									"src": "6017:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "6135:459:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6608:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6624:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "6616:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6636:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "6628:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6615:29:1"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6661:0:1"
									},
									"scope": 1828,
									"src": "6599:63:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "6668:316:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6998:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7024:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "7016:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7039:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "7034:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1774,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7034:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:34:1"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7058:0:1"
									},
									"scope": 1828,
									"src": "6989:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "7065:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7218:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7238:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "7230:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7229:17:1"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7278:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "7270:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7269:18:1"
									},
									"scope": 1828,
									"src": "7209:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "7294:139:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7447:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7472:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "7464:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7487:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "7479:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:33:1"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "7520:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7520:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:6:1"
									},
									"scope": 1828,
									"src": "7438:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "7717:58:1",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1802,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7789:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7793:2:1"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "7819:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7819:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7818:15:1"
									},
									"scope": 1828,
									"src": "7780:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "7840:60:1",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7914:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7920:2:1"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "7946:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1805,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7946:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7945:15:1"
									},
									"scope": 1828,
									"src": "7905:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "7967:90:1",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8071:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8088:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "8080:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8080:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8079:17:1"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "8120:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1813,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8120:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8119:15:1"
									},
									"scope": 1828,
									"src": "8062:73:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "8322:267:1",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 1827,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8600:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8636:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "8620:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8620:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8657:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "8649:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8649:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8684:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "8668:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8706:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "8690:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8690:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8619:90:1"
									},
									"src": "8594:116:1"
								}
							],
							"scope": 1829,
							"src": "147:8565:1",
							"usedErrors": [
								1628,
								1631,
								1634,
								1637,
								1640,
								1643,
								1646,
								1649,
								1652,
								1655,
								1658,
								1661,
								1664
							]
						}
					],
					"src": "84:8629:1"
				},
				"id": 1
			}
		}
	}
}